[["index.html", "R Basic: Vector About", " R Basic: Vector Jilung Hsieh 2019/9/2 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. "],["basic.html", "Chapter 1 R Basic 1.1 Playing R with R Markdown 1.2 Vectors 1.3 Dataframe", " Chapter 1 R Basic 1.1 Playing R with R Markdown Using Cmd+Enter (Ctrl+Enter in Window) to excute the line where your cursor is located. Using Cmd(Ctrl)+Shift+Enter to run all code in a cell Using mouse to select multiple lines, then Cmd(Ctrl)+Shift+c to comment/uncomment multiple lines. a &lt;- c(1, 2, 3, 4, 5) b &lt;- 4 a*b ## [1] 4 8 12 16 20 1.1.0.1 Inserting a new code cell Using Cmd(Ctrl)+Option(Alt)+i to insert a new cell 1.1.0.2 Installing and loading packages 套件的使用分為安裝和載入兩個動作。通常安裝好R的時候就已經安裝好基本base套件。當執行R時便會將base套件預載入程式的執行環境中。 非常多的R使用者會編寫第三方套件，並且將這些套件開放給群眾使用。通常這些套件已經被上載到R cran提供下載。而R cran上的套件我們可以使用install.packages(\"package_name\")來自動安裝到我們的電腦中。 1.1.0.3 Install following packages at home Remove comment # symbol to install new package # install.packages(&quot;jsonlite&quot;) # install.packages(&quot;httr&quot;) # install.packages(&quot;tidyverse&quot;) # install.packages(&quot;caret&quot;) # install.packages(&quot;jiebaR&quot;) # install.packages(&quot;topicmodels&quot;) # install.packages(&quot;stm&quot;) 1.1.0.4 Loading third-party packages 這些第三方套件被安裝好後，還需要被加載到程式的執行環境中才可以使用。因此要用library(package_name)將其載入。 # loading jsonlite and httr library library(jsonlite) library(httr) 1.1.0.5 註解 下列程式碼中開頭有#符號者為註解，程式在執行時會自動忽略前面有#符號的程式碼。 當使用RMarkdown格式撰寫時，因為RMarkdown是在事後才生成文件，所以當遇到要安裝該套件的指令時，便會跳出錯誤訊息。 # a &lt;- c(1, 2, 3, 4, 5) # b &lt;- 4 # a*b 1.1.1 Loading dcard data 先不要去管fromJSON(content(GET(url), \"text\"))是什麼意思，先著重在語言的形式。通常一個函式會寫為func_name()，所以上述其實是三個函式由內而外一層套一層，從最內層開始往外做。 這其實很make-sense，因為如果你有一個數學式(1 + (3-3)/2)/8，也是會從最裡面那層做出來。 library(jsonlite) library(httr) url &lt;- &quot;https://www.dcard.tw/_api/forums/relationship/posts?popular=true&quot; res &lt;- fromJSON(content(GET(url), &quot;text&quot;)) dplyr::glimpse(res) ## Rows: 30 ## Columns: 53 ## $ id &lt;int&gt; 235931948, 238716114, 238711593, 238711362, 23… ## $ title &lt;chr&gt; &quot;#公告 關於感情板的微西斯內容&quot;, &quot;分手完馬上做… ## $ excerpt &lt;chr&gt; &quot;各位卡友們好，小天使近期收到許多關於感情板西… ## $ anonymousSchool &lt;lgl&gt; FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TR… ## $ anonymousDepartment &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… ## $ pinned &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… ## $ forumId &lt;chr&gt; &quot;42851318-b9e2-4a75-8a05-9fe180becefe&quot;, &quot;42851… ## $ replyId &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ createdAt &lt;chr&gt; &quot;2021-05-07T06:11:32.413Z&quot;, &quot;2022-04-25T17:37:… ## $ updatedAt &lt;chr&gt; &quot;2021-05-07T18:00:24.726Z&quot;, &quot;2022-04-26T03:50:… ## $ commentCount &lt;int&gt; 34, 586, 334, 166, 203, 407, 124, 140, 138, 14… ## $ likeCount &lt;int&gt; 315, 2383, 2121, 1128, 887, 878, 727, 542, 434… ## $ withNickname &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… ## $ tags &lt;list&gt; &quot;HIDE_THUMBNAIL&quot;, &quot;HIDE_THUMBNAIL&quot;, &lt;&gt;, &lt;&gt;, &quot;… ## $ topics &lt;list&gt; &lt;&gt;, &lt;&quot;分手後&quot;, &quot;吵架就說分手&quot;&gt;, &lt;&quot;交友&quot;, &quot;omi… ## $ meta &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt; ## $ forumName &lt;chr&gt; &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感情&quot;, &quot;感… ## $ forumAlias &lt;chr&gt; &quot;relationship&quot;, &quot;relationship&quot;, &quot;relationship&quot;… ## $ nsfw &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ gender &lt;chr&gt; &quot;D&quot;, &quot;M&quot;, &quot;F&quot;, &quot;F&quot;, &quot;F&quot;, &quot;M&quot;, &quot;F&quot;, &quot;F&quot;, &quot;M&quot;, &quot;… ## $ school &lt;chr&gt; &quot;客服小天使&quot;, NA, NA, &quot;國立臺灣藝術大學&quot;, NA, … ## $ department &lt;chr&gt; &quot;dcard_support_1&quot;, NA, NA, NA, NA, NA, NA, NA,… ## $ replyTitle &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ mediaMeta &lt;list&gt; [&lt;data.frame[0 x 0]&gt;], [&lt;data.frame[1 x 10]&gt;],… ## $ reactions &lt;list&gt; [&lt;data.frame[4 x 2]&gt;], [&lt;data.frame[6 x 2]&gt;],… ## $ hidden &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL… ## $ customStyle &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ isSuspiciousAccount &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ isModerator &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ layout &lt;chr&gt; &quot;classic&quot;, &quot;classic&quot;, &quot;classic&quot;, &quot;classic&quot;, &quot;c… ## $ pinnedType &lt;chr&gt; &quot;dcard&quot;, NA, NA, NA, NA, NA, NA, NA, NA, NA, N… ## $ pinnedPriority &lt;dbl&gt; 1.620368e+12, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ spoilerAlert &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ categories &lt;list&gt; &quot;公告&quot;, &lt;NULL&gt;, &lt;NULL&gt;, &lt;NULL&gt;, &lt;NULL&gt;, &lt;NULL&gt;… ## $ isSelectedPost &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL… ## $ unsafe &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ totalCommentCount &lt;int&gt; 34, 681, 564, 250, 335, 1019, 180, 246, 195, 1… ## $ withImages &lt;lgl&gt; FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, T… ## $ withVideos &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALS… ## $ media &lt;list&gt; [&lt;data.frame[0 x 0]&gt;], [&lt;data.frame[0 x 0]&gt;], … ## $ reportReasonText &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;… ## $ supportedReactions &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ excerptComments &lt;list&gt; [], [], [], [], [], [], [], [], [], [], [], []… ## $ edited &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FAL… ## $ collectionCount &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… ## $ postAvatar &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ activityAvatar &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ verifiedBadge &lt;lgl&gt; TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE… ## $ memberType &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ enablePrivateMessage &lt;lgl&gt; NA, FALSE, FALSE, NA, FALSE, NA, NA, NA, FALSE… ## $ enableNestedComment &lt;lgl&gt; NA, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, … ## $ leaderboardCategoryId &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ leaderboardCategoryName &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… head(res) ## id title ## 1 235931948 #公告 關於感情板的微西斯內容 ## 2 238716114 分手完馬上做特別興奮 ## 3 238711593 在交友軟體上發現朋友的男友 ## 4 238711362 直男的浪漫…….紅蘿蔔真的去死 ## 5 238715042 第一次看老公隱私，覺得心態好崩潰⋯ ## 6 238709372 老婆跟我提離婚了 ## excerpt ## 1 各位卡友們好，小天使近期收到許多關於感情板西斯內容的檢舉以及相關詢問，我們了解感情板是為討論情感關係所設立，而「性」也是感情中的一部份，因此不會禁止討論這些內容。但有部分文章內容描述過於露骨，或是除了 ## 2 跟女友同居一年了，前一陣子為了誰該維持家中整潔而吵架感情決裂，氣的彼此說好分一分比較乾脆啦，東西都妳一個我一個分好了，講話也開始變得像陌生人一樣，變得非常客氣十分客套，但是過了一會，氣氛突然變得很詭異 ## 3 在Omi上面看到朋友的男友，還like我，我嚇一跳問了我朋友，一問之下才發現原來不是初犯，之前這男生去年答應我朋友不再用，結果還是一樣！，還會加別的女生賴直接撩個夠～我朋友真的也很誇張的傻，她兩個禮拜 ## 4 最近畢製快到，整天忙得要死三餐都隨便吃，（是真的隨便吃大概就餅乾、水果那些或喝飲料），男友剛看不下去幫我泡了一碗泡麵，但...打開泡麵，看見，滿滿ㄉ，紅蘿蔔，真的，不感動耶…，明知道我很挑食但又愛逼我 ## 5 跟老公認識到現在從來沒有真的翻過他手機，一直都很信任他，相信他會自己拿捏跟女生的界線，所以基本上也不會限制他什麼，但最近因為懷疑他有事情隱瞞我，所以偷偷看了訊息。我們之前分手過，後來他找我複合，而且主 ## 6 事情是這樣，簡單敘述。和老婆是因為懷孕而結婚了，原本小孩未出生前，我們都是在外居住。直到小孩出生，因為我們倆都有工作，無法帶小孩，加上我倆薪資不高，也不夠負擔保姆費用。所以把小孩帶回我家，因為小孩帶回 ## anonymousSchool anonymousDepartment pinned ## 1 FALSE TRUE TRUE ## 2 TRUE TRUE FALSE ## 3 TRUE TRUE FALSE ## 4 FALSE TRUE FALSE ## 5 TRUE TRUE FALSE ## 6 TRUE TRUE FALSE ## forumId replyId createdAt ## 1 42851318-b9e2-4a75-8a05-9fe180becefe NA 2021-05-07T06:11:32.413Z ## 2 42851318-b9e2-4a75-8a05-9fe180becefe NA 2022-04-25T17:37:11.457Z ## 3 42851318-b9e2-4a75-8a05-9fe180becefe NA 2022-04-25T09:39:56.061Z ## 4 42851318-b9e2-4a75-8a05-9fe180becefe NA 2022-04-25T09:11:55.806Z ## 5 42851318-b9e2-4a75-8a05-9fe180becefe NA 2022-04-25T15:35:26.209Z ## 6 42851318-b9e2-4a75-8a05-9fe180becefe NA 2022-04-25T05:18:38.773Z ## updatedAt commentCount likeCount withNickname tags ## 1 2021-05-07T18:00:24.726Z 34 315 TRUE HIDE_THUMBNAIL ## 2 2022-04-26T03:50:46.275Z 586 2383 FALSE HIDE_THUMBNAIL ## 3 2022-04-26T11:21:34.628Z 334 2121 FALSE ## 4 2022-04-25T09:11:55.806Z 166 1128 FALSE ## 5 2022-04-26T07:13:38.374Z 203 887 FALSE HIDE_THUMBNAIL ## 6 2022-04-25T05:18:38.773Z 407 878 FALSE HIDE_THUMBNAIL ## topics meta.layout meta.disableAdSense forumName ## 1 classic TRUE 感情 ## 2 分手後, 吵架就說分手 classic NA 感情 ## 3 交友, omi, Omi, 交友軟體, 渣男 classic NA 感情 ## 4 浪漫, 紅蘿蔔, 感情, 愛情, 男友 classic NA 感情 ## 5 老公, 心態, 感情 classic NA 感情 ## 6 離婚 classic NA 感情 ## forumAlias nsfw gender school department replyTitle ## 1 relationship FALSE D 客服小天使 dcard_support_1 NA ## 2 relationship FALSE M &lt;NA&gt; &lt;NA&gt; NA ## 3 relationship FALSE F &lt;NA&gt; &lt;NA&gt; NA ## 4 relationship FALSE F 國立臺灣藝術大學 &lt;NA&gt; NA ## 5 relationship FALSE F &lt;NA&gt; &lt;NA&gt; NA ## 6 relationship FALSE M &lt;NA&gt; &lt;NA&gt; NA ## mediaMeta ## 1 NULL ## 2 e27e5875-4cda-422e-b011-a8205b9b2816, https://sticker-assets.dcard.tw/images/e93afb68-3148-4ae6-bfaf-2fe6bf071d35/orig.png, https://megapx.dcard.tw/v1/images/e93afb68-3148-4ae6-bfaf-2fe6bf071d35, , image/sticker, IMAGE_NOT_AVAILABLE, 2022-04-25T17:37:11.457Z, 2022-04-26T03:50:46.275Z, 512, 512 ## 3 5431dc73-392b-43b6-b97c-50ed6d0c533a, 5431dc73-392b-43b6-b97c-50ed6d0c533a, f301b87a-4319-4a98-8d57-346ae6045ef6, a4a3ab81-aa8d-4bc0-8639-95dfbff15a39, 4cf70df7-82b8-48b4-81e2-6774fc773782, https://i.imgur.com/kiAugXAl.jpg, https://i.imgur.com/kiAugXA.jpg, https://i.imgur.com/Ck2m2Ws.jpg, https://i.imgur.com/R3mXqrH.jpg, https://i.imgur.com/r4mqWeS.jpg, https://i.imgur.com/kiAugXAl.jpg, https://imgur.com/kiAugXA, https://imgur.com/Ck2m2Ws, https://imgur.com/R3mXqrH, https://imgur.com/r4mqWeS, https://i.imgur.com/kiAugXAl.jpg, https://i.imgur.com/kiAugXAl.jpg, https://i.imgur.com/Ck2m2Wsl.jpg, https://i.imgur.com/R3mXqrHl.jpg, https://i.imgur.com/r4mqWeSl.jpg, image/thumbnail, image/imgur, image/imgur, image/imgur, image/imgur, ANNOTATED, ANNOTATED, ANNOTATED, ANNOTATED, 2022-04-26T11:05:56.528Z, 2022-04-26T11:05:56.528Z, 2022-04-26T11:21:34.628Z, 2022-04-25T09:43:27.577Z, 2022-04-26T11:05:56.528Z, 2022-04-26T11:21:34.628Z, 2022-04-26T11:21:34.628Z, 2022-04-26T11:21:34.628Z, 2022-04-26T11:21:34.628Z, 2022-04-26T11:21:34.628Z, 642, 642, 976, 1693, 1080, 951, 951, 1301, 2000, 1844, 0, 0, NA, NA, NA, 100, 100, NA, NA, NA, 642, 642, NA, NA, NA, 851, 851, NA, NA, NA ## 4 977b42a3-3085-4b4e-bd6b-2aa06f413557, 977b42a3-3085-4b4e-bd6b-2aa06f413557, b41dceac-7119-47fa-8fe5-ff27af51d5c8, https://i.imgur.com/PVxZRiIl.jpg, https://i.imgur.com/PVxZRiI.jpg, https://i.imgur.com/EjJNHnW.jpg, https://i.imgur.com/PVxZRiIl.jpg, https://imgur.com/PVxZRiI, https://imgur.com/EjJNHnW, https://i.imgur.com/PVxZRiIl.jpg, https://i.imgur.com/PVxZRiIl.jpg, https://i.imgur.com/EjJNHnWl.jpg, image/thumbnail, image/imgur, image/imgur, 2022-04-25T09:11:55.806Z, 2022-04-25T09:11:55.806Z, 2022-04-25T09:11:55.806Z, 2022-04-25T09:11:55.806Z, 2022-04-25T09:11:55.806Z, 2022-04-25T09:11:55.806Z, 1501, 1501, 1501, 2000, 2000, 2000 ## 5 NULL ## 6 NULL ## reactions ## 1 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, aa0d425f-d530-4478-9a77-fe3aedc79eea, 4b018f48-e184-445f-adf1-fc8e04ba09b9, 308, 4, 2, 1 ## 2 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 4b018f48-e184-445f-adf1-fc8e04ba09b9, aa0d425f-d530-4478-9a77-fe3aedc79eea, 011ead16-9b83-4729-9fde-c588920c6c2d, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 1991, 313, 71, 4, 3, 1 ## 3 286f599c-f86a-4932-82f0-f5a06f1eca03, 4b018f48-e184-445f-adf1-fc8e04ba09b9, aa0d425f-d530-4478-9a77-fe3aedc79eea, e8e6bc5d-41b0-4129-b134-97507523d7ff, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 1838, 126, 85, 50, 22 ## 4 286f599c-f86a-4932-82f0-f5a06f1eca03, e8e6bc5d-41b0-4129-b134-97507523d7ff, 514c2569-fd53-4d9d-a415-bf0f88e7329f, 4b018f48-e184-445f-adf1-fc8e04ba09b9, 011ead16-9b83-4729-9fde-c588920c6c2d, 994, 126, 5, 2, 1 ## 5 286f599c-f86a-4932-82f0-f5a06f1eca03, 4b018f48-e184-445f-adf1-fc8e04ba09b9, e8e6bc5d-41b0-4129-b134-97507523d7ff, 514c2569-fd53-4d9d-a415-bf0f88e7329f, aa0d425f-d530-4478-9a77-fe3aedc79eea, 806, 33, 28, 13, 7 ## 6 286f599c-f86a-4932-82f0-f5a06f1eca03, 514c2569-fd53-4d9d-a415-bf0f88e7329f, e8e6bc5d-41b0-4129-b134-97507523d7ff, 4b018f48-e184-445f-adf1-fc8e04ba09b9, aa0d425f-d530-4478-9a77-fe3aedc79eea, 758, 65, 41, 9, 5 ## hidden customStyle isSuspiciousAccount isModerator layout pinnedType ## 1 FALSE NA FALSE FALSE classic dcard ## 2 FALSE NA FALSE FALSE classic &lt;NA&gt; ## 3 FALSE NA FALSE FALSE classic &lt;NA&gt; ## 4 FALSE NA FALSE FALSE classic &lt;NA&gt; ## 5 FALSE NA FALSE FALSE classic &lt;NA&gt; ## 6 FALSE NA FALSE FALSE classic &lt;NA&gt; ## pinnedPriority spoilerAlert categories isSelectedPost unsafe ## 1 1.620368e+12 FALSE 公告 FALSE FALSE ## 2 NA FALSE NULL FALSE FALSE ## 3 NA FALSE NULL FALSE FALSE ## 4 NA FALSE NULL FALSE FALSE ## 5 NA FALSE NULL FALSE FALSE ## 6 NA FALSE NULL FALSE FALSE ## totalCommentCount withImages withVideos ## 1 34 FALSE FALSE ## 2 681 TRUE FALSE ## 3 564 TRUE FALSE ## 4 250 TRUE FALSE ## 5 335 FALSE FALSE ## 6 1019 FALSE FALSE ## media ## 1 NULL ## 2 NULL ## 3 https://i.imgur.com/kiAugXA.jpg, https://i.imgur.com/Ck2m2Ws.jpg, https://i.imgur.com/R3mXqrH.jpg, https://i.imgur.com/r4mqWeS.jpg ## 4 https://i.imgur.com/PVxZRiI.jpg, https://i.imgur.com/EjJNHnW.jpg ## 5 NULL ## 6 NULL ## reportReasonText supportedReactions excerptComments edited collectionCount ## 1 NA NULL FALSE 0 ## 2 NA NULL FALSE 0 ## 3 NA NULL FALSE 0 ## 4 NA NULL FALSE 0 ## 5 NA NULL FALSE 0 ## 6 NA NULL FALSE 0 ## postAvatar activityAvatar verifiedBadge memberType enablePrivateMessage ## 1 TRUE NA ## 2 FALSE FALSE ## 3 FALSE FALSE ## 4 FALSE NA ## 5 FALSE FALSE ## 6 FALSE NA ## enableNestedComment leaderboardCategoryId leaderboardCategoryName ## 1 NA &lt;NA&gt; &lt;NA&gt; ## 2 TRUE &lt;NA&gt; &lt;NA&gt; ## 3 TRUE &lt;NA&gt; &lt;NA&gt; ## 4 TRUE &lt;NA&gt; &lt;NA&gt; ## 5 TRUE &lt;NA&gt; &lt;NA&gt; ## 6 TRUE &lt;NA&gt; &lt;NA&gt; # View(res) 1.1.2 Getting Taipei theft report data 1.1.2.1 Getting from the web directly Go to data.taipei Make a query “住宅竊盜” Open “住宅竊盜點位資訊” Click “API” Copy the API address and assign to url url &lt;- &quot;https://data.taipei/api/v1/dataset/93d9bc2d-af08-4db7-a56b-9f0a49226fa3?scope=resourceAquire&quot; df &lt;- read_json(url, simplifyVector = T) head(df) ## $result ## $result$limit ## [1] 20 ## ## $result$offset ## [1] 0 ## ## $result$count ## [1] 3321 ## ## $result$sort ## [1] &quot;&quot; ## ## $result$results ## _id ﻿編號 案類 發生日期 發生時段 ## 1 1 1 住宅竊盜 1030623 08~10 ## 2 2 2 住宅竊盜 1040101 00~02 ## 3 3 3 住宅竊盜 1040101 00~02 ## 4 4 4 住宅竊盜 1040101 06~08 ## 5 5 5 住宅竊盜 1040101 10~12 ## 6 6 6 住宅竊盜 1040102 00~02 ## 7 7 7 住宅竊盜 1040102 06~08 ## 8 8 8 住宅竊盜 1040102 06~08 ## 9 9 9 住宅竊盜 1040102 10~12 ## 10 10 10 住宅竊盜 1040104 10~12 ## 11 11 11 住宅竊盜 1040104 12~14 ## 12 12 12 住宅竊盜 1040105 00~02 ## 13 13 13 住宅竊盜 1040105 04~06 ## 14 14 14 住宅竊盜 1040105 04~06 ## 15 15 15 住宅竊盜 1040105 12~14 ## 16 16 16 住宅竊盜 1040105 16~18 ## 17 17 17 住宅竊盜 1040105 18~20 ## 18 18 18 住宅竊盜 1040106 04~06 ## 19 19 19 住宅竊盜 1040106 16~18 ## 20 20 20 住宅竊盜 1040107 16~18 ## 發生地點 ## 1 臺北市中正區廈門街91~120號 ## 2 臺北市文山區萬美里萬寧街1~30號 ## 3 臺北市信義區富台里忠孝東路5段295巷6弄1~30號 ## 4 臺北市中山區新生北路1段91~120號 ## 5 臺北市文山區明興里興隆路4段1~30號 ## 6 臺北市士林區天福里1鄰忠誠路2段130巷1~30號 ## 7 臺北市萬華區糖?里大理街159巷1~30號 ## 8 臺北市萬華區糖?里大理街159巷1~30號 ## 9 臺北市中山區吉林路121~150號 ## 10 臺北市信義區五常里永吉路225巷32弄1~30號 ## 11 臺北市士林區明勝里通河街31~60號 ## 12 臺北市中山區南京東路3段181~210號 ## 13 臺北市萬華區大理街159巷1~30號 ## 14 臺北市萬華區糖?里大理街159巷1~30號 ## 15 臺北市北投區吉慶里實踐街56巷1~30號 ## 16 臺北市中正區忠勤里中華路2段311巷1~30號 ## 17 臺北市文山區興福里12鄰景華街61~90號 ## 18 臺北市信義區雅祥里基隆路1段1~30號 ## 19 臺北市中正區水源里汀州路3段91~120號 ## 20 臺北市文山區萬芳里萬芳路31~60號 dplyr::glimpse(df) ## List of 1 ## $ result:List of 5 ## ..$ limit : int 20 ## ..$ offset : int 0 ## ..$ count : int 3321 ## ..$ sort : chr &quot;&quot; ## ..$ results:&#39;data.frame&#39;: 20 obs. of 6 variables: ## .. ..$ _id : int [1:20] 1 2 3 4 5 6 7 8 9 10 ... ## .. ..$ ﻿編號 : chr [1:20] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; ... ## .. ..$ 案類 : chr [1:20] &quot;住宅竊盜&quot; &quot;住宅竊盜&quot; &quot;住宅竊盜&quot; &quot;住宅竊盜&quot; ... ## .. ..$ 發生日期: chr [1:20] &quot;1030623&quot; &quot;1040101&quot; &quot;1040101&quot; &quot;1040101&quot; ... ## .. ..$ 發生時段: chr [1:20] &quot;08~10&quot; &quot;00~02&quot; &quot;00~02&quot; &quot;06~08&quot; ... ## .. ..$ 發生地點: chr [1:20] &quot;臺北市中正區廈門街91~120號&quot; &quot;臺北市文山區萬美里萬寧街1~30號&quot; &quot;臺北市信義區富台里忠孝東路5段295巷6弄1~30號&quot; &quot;臺北市中山區新生北路1段91~120號&quot; ... 1.1.3 Loading a csv file in data directory # if mac cannot read data GET(url, write_disk(&quot;data/tptheft.csv&quot;, overwrite = TRUE)) ## Response [https://data.taipei/api/v1/dataset/93d9bc2d-af08-4db7-a56b-9f0a49226fa3?scope=resourceAquire] ## Date: 2022-04-26 16:31 ## Status: 200 ## Content-Type: application/json ## Size: 3.35 kB ## &lt;ON DISK&gt; /Users/jirlong/Dropbox/Programming/JOUR5014/data/tptheft.csv df &lt;- read.csv(&quot;data/tptheft.csv&quot;, fileEncoding = &quot;big5&quot;) head(df) ## [1] X.result..limit.20 ## [2] offset.0 ## [3] count.3321 ## [4] sort. ## [5] results..._id.1 ## [6] 嚜輻楊..result..limit.20.offset.0.count.3321.sort...results..._id.1.嚜輻楊 ## &lt;0 列&gt; (或零長度的 row.names) 1.1.4 Loading MOI data through API library(httr) library(jsonlite) url &lt;- &quot;https://www.ris.gov.tw/rs-opendata/api/v1/datastore/ODRP024/107?page=1&quot; first_page &lt;- fromJSON(content(GET(url), &quot;text&quot;)) head(first_page$responseData) ## statistic_yyy district_code site_id village edu sex ## 1 107 65000010001 新北市板橋區 留侯里 博畢 男 ## 2 107 65000010001 新北市板橋區 留侯里 碩畢 男 ## 3 107 65000010001 新北市板橋區 留侯里 大畢 男 ## 4 107 65000010001 新北市板橋區 留侯里 專畢 男 ## 5 107 65000010001 新北市板橋區 留侯里 高中畢 男 ## 6 107 65000010001 新北市板橋區 留侯里 國中畢 男 ## headhousehold_count ## 1 3 ## 2 26 ## 3 71 ## 4 52 ## 5 122 ## 6 40 1.1.4.1 (deprecated) Getting 104 query data deprecated due to blocked by new cookie or referer url &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E8%B3%87%E6%96%99%E7%A7%91%E5%AD%B8&amp;order=15&amp;asc=0&amp;page=4&amp;mode=s&amp;jobsource=2018indexpoc&quot; browseURL(url) txt &lt;- content(GET(url), &quot;text&quot;) res &lt;- fromJSON(content(GET(url), &quot;text&quot;)) df &lt;- res$data$list head(df) 1.1.5 Getting ubike https://taipeicity.github.io/traffic_realtime/ url &lt;- &quot;https://tcgbusfs.blob.core.windows.net/blobyoubike/YouBikeTP.json&quot; ubike.list &lt;- fromJSON(content(GET(url),&quot;text&quot;, encoding = &quot;utf-8&quot;)) ubike.v &lt;- unlist(ubike.list$retVal) ubike.m &lt;- matrix(ubike.v, byrow = T, ncol = 14) ubike.df &lt;- as.data.frame(ubike.m) names(ubike.df) &lt;- names(ubike.list$retVal$`0001`) head(ubike.df) ## sno sna tot sbi sarea mday lat ## 1 0001 捷運市政府站(3號出口) 88 4 信義區 20220427002928 25.0408578889 ## 2 0002 捷運國父紀念館站(2號出口) 16 1 大安區 20220427002919 25.041254 ## 3 0004 市民廣場 32 1 信義區 20220427002943 25.0360361111 ## 4 0005 興雅國中 32 4 信義區 20220427002831 25.0365638889 ## 5 0006 臺北南山廣場 54 6 信義區 20220427002918 25.034047 ## 6 0007 信義廣場(台北101) 80 0 信義區 20220427002924 25.0330388889 ## lng ar ## 1 121.567904444 忠孝東路/松仁路(東南側) ## 2 121.55742 忠孝東路四段/光復南路口(西南側) ## 3 121.562325 市府路/松壽路(西北側)(鄰近台北101/台北世界貿易中心/台北探索館) ## 4 121.5686639 松仁路/松仁路95巷(東南側)(鄰近信義商圈/台北信義威秀影城) ## 5 121.565973 松智路/松廉路(東北側) (鄰近台北101/信義商圈/台北信義威秀影城) ## 6 121.565619444 松智路/信義路(東北側) (鄰近台北101) ## sareaen snaen ## 1 Xinyi Dist. MRT Taipei City Hall Stataion(Exit 3)-2 ## 2 Daan Dist. MRT S.Y.S Memorial Hall Stataion(Exit 2.) ## 3 Xinyi Dist. Citizen Square ## 4 Xinyi Dist. Xingya Jr. High School ## 5 Xinyi Dist. NAN SHAN PLAZA ## 6 Xinyi Dist. Xinyi Square(Taipei 101) ## aren bemp act ## 1 The S.W. side of Road Zhongxiao East Road &amp; Road Chung Yan. 82 1 ## 2 Sec,4. Zhongxiao E.Rd/GuangFu S. Rd 15 1 ## 3 The N.W. side of Road Shifu &amp; Road Song Shou. 31 1 ## 4 The S.E. side of Road Songren &amp; Ln. 95, Songren Rd.. 28 1 ## 5 The N.E. side of Road Song Zhi &amp; Road Song Lian. 48 1 ## 6 The N.E. side of Road Song Zhi &amp; Road Xinyi. 80 1 1.2 Vectors 1.2.1 R syntax 1.2.1.1 Assignment &lt;- 將右邊的算式或數值指派給左邊的變數。右邊如果是numeric，那左邊的變數就是numeric variable；右邊如果是character，左邊的變數就是character variable。 在幾乎所有程式語言中，單等號=指的是assignment，把右方的算式、值或物件指給左方的變數。而比較兩者相不相等，則用雙等號==，例如1==3-2。 a &lt;- 1 b &lt;- c(1, 2, 3, 4) c &lt;- c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;) d &lt;- c(b, a) e &lt;- &quot;abcd&quot; 1.2.1.2 comments 註解 註解：在程式碼區塊若前面有#字號後面跟著空白的話，那代表那行被標示為註解，程式執行時會自動跳過註解不執行。 快速鍵：當游標在某一行程式碼時打cmd(ctrl)-shift-c，就可以產生註解。 # df &lt;- data.frame(a = c(1, 2, 3), b = c(3, 4, 5)) 1.2.2 Vector basic operations 各縣市平均每月薪資所得 各縣市人口數 1.2.2.1 Creating 在程式碼中，只要是文字必用成對的雙引號或單引號包含其中，以區隔「變數」和「數字」。例如如果看到沒有雙引號的「英文字母」必定是變數名稱，或函式名稱。 如果看到有雙引號的數字，那也是文字。 income &lt;- c(70100, 51300, 51100, 48400, 47600, 43000) county &lt;- c(&quot;台北&quot;, &quot;新北&quot;, &quot;桃園&quot;, &quot;高雄&quot;, &quot;台中&quot;, &quot;台南&quot;) population &lt;- c(2.6, 3.9, 2.2, 2.7, 2.8, 1.8) area &lt;- c(271.8, 2052.5, 1221, 2951.9, 2214.9, 2191.7) income ## [1] 70100 51300 51100 48400 47600 43000 county[c(5, 3, 1)] ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; county &lt;- county[c(5, 3, 1)] county ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; area ## [1] 271.8 2052.5 1221.0 2951.9 2214.9 2191.7 population ## [1] 2.6 3.9 2.2 2.7 2.8 1.8 1.2.2.2 Creating a sequence a &lt;- seq(11, 99, 11) a ## [1] 11 22 33 44 55 66 77 88 99 b &lt;- 11:20 b ## [1] 11 12 13 14 15 16 17 18 19 20 1.2.2.3 Creating sequences by distribution x &lt;- runif(10000000, 1, 10) # uniform dist, n=1000 plot(density(x)) x &lt;- rnorm(1000, 1, 10) # uniform dist, n=1000 plot(density(x)) x &lt;- rnorm(10000000, 1, 10) # normal dist, n=1000 plot(density(x)) 1.2.3 Viewing county ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; income ## [1] 70100 51300 51100 48400 47600 43000 head(county) ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; tail(county) ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; length(county) ## [1] 3 mode(county) ## [1] &quot;character&quot; class(county) ## [1] &quot;character&quot; # View(county) length(county) ## [1] 3 length(income) ## [1] 6 1.2.4 Subsetting, filtering It is important to know how to neglect first n or last n elements. For example, a[1:(length(a)-2)] will neglect the last two elements. Thinking why I need parentheses for length(a)-2 here. county ## [1] &quot;台中&quot; &quot;桃園&quot; &quot;台北&quot; county[c(5, 3, 1)] # how about country[c(1, 3, 5)] ## [1] NA &quot;台北&quot; &quot;台中&quot; county[3:6] # is it equal to country[c(3, 4, 5, 6)] ## [1] &quot;台北&quot; NA NA NA a &lt;- 11:19 a[3:length(a)] ## [1] 13 14 15 16 17 18 19 a[length(a):3] ## [1] 19 18 17 16 15 14 13 1.2.5 Deleting Without assignment, deletion won’t change original vectors b &lt;- 11:20 b[-(3:5)] ## [1] 11 12 16 17 18 19 20 b[-c(1, 3, 5)] ## [1] 12 14 16 17 18 19 20 b ## [1] 11 12 13 14 15 16 17 18 19 20 Correct deleting operations with assignment to replace original vector b &lt;- b[-(3:5)] b ## [1] 11 12 16 17 18 19 20 a &lt;- seq(11, 99, 11) a &lt;- a[-c(1, 3, 5)] a ## [1] 22 44 66 77 88 99 1.2.6 Concatinating Concatinating is quite useful for web crawling when you crawl article links page by page. You may be not sure the number of page you need to crawl. So you need to append entire new vector to old vector. It is concatinating. (“Appending” often means adding one new element at the end of data.) a &lt;- 1:10 a &lt;- c(a, 11) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 b ## [1] 11 12 16 17 18 19 20 a &lt;- c(a, b) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 11 12 16 17 18 19 20 a &lt;- c(a, a, b) a ## [1] 1 2 3 4 5 6 7 8 9 10 11 11 12 16 17 18 19 20 1 2 3 4 5 6 7 ## [26] 8 9 10 11 11 12 16 17 18 19 20 11 12 16 17 18 19 20 1.2.7 Calculating with vectors 1.2.7.1 Arithmetic operations a &lt;- 11:19 a + 3 ## [1] 14 15 16 17 18 19 20 21 22 a / 2 ## [1] 5.5 6.0 6.5 7.0 7.5 8.0 8.5 9.0 9.5 a %% 2 ## [1] 1 0 1 0 1 0 1 0 1 a %/% 2 ## [1] 5 6 6 7 7 8 8 9 9 a %% 2== 0 ## [1] FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE which(a %% 2== 0) ## [1] 2 4 6 8 a[which(a%% 2 == 0)] ## [1] 12 14 16 18 a[c(2, 4, 6, 8)] ## [1] 12 14 16 18 a %% 2 != 0 ## [1] TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE TRUE a[a%% 2 == 0] ## [1] 12 14 16 18 a[a%%2 != 0] ## [1] 11 13 15 17 19 a &lt;- a %% 2 # modular arithmetic, get the reminder a &lt;- a %/% 2 # Quotient 1.2.7.2 Logic comparisons a %% 2 == 0 # deteting odd/even number ## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE a %% 2 != 0 ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE a[a%%2==0] ## [1] 0 0 0 0 0 0 0 0 0 a &gt; b ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE income &gt; mean(income) ## [1] TRUE FALSE FALSE FALSE FALSE FALSE TRUE == T # == equal to, ## [1] TRUE TRUE != F # != Not equal to ## [1] TRUE any(a&gt;11) # is there any element larger than 1 ## [1] FALSE all(a&gt;11) # are all elements larger than 1 ## [1] FALSE 1.2.7.3 Subsetting by logic comparisons two methods to filter data from vectors, by index vector or a logical vector with equal length. a &lt;- seq(11, 55, 11) a[c(T, F, T, F, T)] ## [1] 11 33 55 a[a%%2==1] ## [1] 11 33 55 a%%2 ## [1] 1 0 1 0 1 a%%2==1 ## [1] TRUE FALSE TRUE FALSE TRUE a &lt;- c(&quot;你好&quot;,&quot;你好棒棒&quot;,&quot;你好棒&quot;,&quot;你真的好棒&quot;) a[nchar(a)&gt;3] ## [1] &quot;你好棒棒&quot; &quot;你真的好棒&quot; # which will return &quot;index-of&quot; a &lt;- seq(11, 55, 11) a[which(a%%2==1)] ## [1] 11 33 55 which(a%%2==1) ## [1] 1 3 5 1.2.7.4 Sorting and ordering sort(x)的結果必須用&lt;-覆蓋原本的x，此時的x才算被排序的結果。 order(x)函式會傳回x數值由小到大的索引。這個例子的結果是5, 4, 3, 6, 1, 2，也就是5位置的那個數最小、4那個位置的數次小、接下來3, 6, 1, 2。 x[order(x)]把order(x)結果（也就是c(5, 4, 3, 6, 1, 2)）傳給原本的x便會使得原本的x重新排序。通常order()的用途是，我們可以將兩個等長的variables例如var1和var2，依據var2來重新排序var1，例如var1[order(var2)]。 x &lt;- c(33, 55, 22, 13, 4, 24) mode(x) ## [1] &quot;numeric&quot; class(x) ## [1] &quot;numeric&quot; sort(x) ## [1] 4 13 22 24 33 55 # x &lt;- sort(x) # assign to replace original x order(x) ## [1] 5 4 3 6 1 2 x[order(x)] ## [1] 4 13 22 24 33 55 x[c(5, 4, 3, 6, 1, 2)] ## [1] 4 13 22 24 33 55 1.2.7.5 Built-in math functions a &lt;- 11:19 min(a); max(a); mean(a); median(a); sd(a) ## [1] 11 ## [1] 19 ## [1] 15 ## [1] 15 ## [1] 2.738613 log2(a) ## [1] 3.459432 3.584963 3.700440 3.807355 3.906891 4.000000 4.087463 4.169925 ## [9] 4.247928 log1p(a) ## [1] 2.484907 2.564949 2.639057 2.708050 2.772589 2.833213 2.890372 2.944439 ## [9] 2.995732 ?log1p 1.2.8 Data types 1.2.8.1 Checking data type mode(county) # character ## [1] &quot;character&quot; mode(income) # numeric ## [1] &quot;numeric&quot; mode(income &gt; mean(income)) # logical ## [1] &quot;logical&quot; testing &lt;- c(&quot;26.142&quot;, &quot;12.008&quot;, &quot;7.032&quot;, &quot;13.646&quot;, &quot;4.589&quot;) mode(testing) # character ## [1] &quot;character&quot; 1.2.8.2 Converting data type numeric vector可以用as.character(x)轉成charcter；logical vector可以用as.numeric(x)轉為numeric。概念上可以說是character &gt; numeric &gt; logical。 如果硬是在logical vector後附加一個numeric element的話，那就會整個vector被轉為numeric vector；相仿地，如果numeric vector後附加一個character element的話那整個vector就會被轉為character vector。 可以用sum()函式來計算logical vector有幾個TRUE值。例如sum(a%%2==1)就是計算a中有幾個奇數。TRUE可視為1、FALSE可視為0，所以加總起來就是TRUE有幾個。 income.c &lt;- as.character(income) population.c &lt;- as.numeric(population) a &lt;- seq(11, 99, 11) a &lt;- c(a, &quot;100&quot;) a &lt;- seq(11, 99, 11) sum(a%%2==1) ## [1] 5 max(a) ## [1] 99 1.2.9 Character operations 1.2.9.1 Character operations a &lt;- seq(11, 55, 11) paste(&quot;A&quot;, a) # concatenate ## [1] &quot;A 11&quot; &quot;A 22&quot; &quot;A 33&quot; &quot;A 44&quot; &quot;A 55&quot; paste0(&quot;A&quot;, a) # concatenate ## [1] &quot;A11&quot; &quot;A22&quot; &quot;A33&quot; &quot;A44&quot; &quot;A55&quot; 1.3 Dataframe 1.3.1 產生新的Dataframe 1.3.1.1 複製資料至vector 直接複製Wikipedia上的台北市某五區人口資料 population &lt;- c(158228, 126687, 228075, 204903, 308383, 187920) town &lt;- c(&quot;中正&quot;, &quot;大同&quot;, &quot;中山&quot;, &quot;松山&quot;, &quot;大安&quot;, &quot;萬華&quot;) area &lt;- c(7.6071, 5.6815, 13.6821, 9.2878, 11.3614, 8.8522) 1.3.1.2 合併等長vector為dataframe df &lt;- data.frame(town, population, area) df$density = df$population / df$area str(df) ## &#39;data.frame&#39;: 6 obs. of 4 variables: ## $ town : chr &quot;中正&quot; &quot;大同&quot; &quot;中山&quot; &quot;松山&quot; ... ## $ population: num 158228 126687 228075 204903 308383 ... ## $ area : num 7.61 5.68 13.68 9.29 11.36 ... ## $ density : num 20800 22298 16670 22062 27143 ... summary(df) ## town population area density ## Length:6 Min. :126687 Min. : 5.681 Min. :16670 ## Class :character 1st Qu.:165651 1st Qu.: 7.918 1st Qu.:20907 ## Mode :character Median :196412 Median : 9.070 Median :21645 ## Mean :202366 Mean : 9.412 Mean :21700 ## 3rd Qu.:222282 3rd Qu.:10.843 3rd Qu.:22239 ## Max. :308383 Max. :13.682 Max. :27143 # View(df) 1.3.1.3 案例二：用vector存放台灣貿易各國進出口量 運用台灣出口進口資料 台灣出口進口貿易資料查詢 country &lt;- c(&quot;CN&quot;, &quot;US&quot;, &quot;JP&quot;, &quot;HK&quot;, &quot;KR&quot;, &quot;SG&quot;, &quot;DE&quot;, &quot;MY&quot;, &quot;VN&quot;, &quot;PH&quot;, &quot;TH&quot;, &quot;AU&quot;, &quot;NL&quot;, &quot;SA&quot;, &quot;ID&quot;, &quot;GB&quot;, &quot;IN&quot;, &quot;FR&quot;, &quot;IT&quot;, &quot;AE&quot;) import &lt;- c(26.142, 12.008, 7.032, 13.646, 4.589, 5.768, 2.131, 2.802, 3.428, 3.019, 1.976, 1.118, 1.624, 0.449, 0.983, 1.302, 1.027, 0.553, 0.670, 0.455) export &lt;- c(22.987, 12.204, 11.837, 7.739, 5.381, 4.610, 2.866, 2.784, 2.414, 2.092, 1.839, 1.788, 1.665, 1.409, 1.391, 1.075, 0.974, 0.899, 0.800, 0.728) 1.3.1.4 合併vector為data.frame 這時候我們若以str(df)觀察該df的結構會發現，文字型態的資料被轉為Factors，這是我們所不樂見的。過去統計通常會把文字型態當成類別變數，於是用Factors作為資料型態，但資料科學中經常要處理大量的文字資料，此時，我們可以把read.csv的一個參數stringsAsFactors設為FALSE，意味著預設不要將文字的資料轉為Factor而是直接以文字變項來處理。* stringsAsFactors = FALSE也是read.csv()的參數（parameter、argument）。因為一般讀檔會預設把文字讀為類別變項也就是Factor，但資料分析經常要處理文字資料而不是類別變項，所以會希望預設不要把文字讀取為類別變項，因此要設定stringsAsFactors = FALSE。 為了避免每次都要打這串參數，可以把它設定為全域參數，可以在程式一開始時便加上options(stringsAsFactors = FASLE)，意味著底下所有的函式如果有stringsAsFactors這個參數，一律自動設為FALSE。 df &lt;- data.frame(country, import, export) str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: chr &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... df &lt;- data.frame(country, import, export, stringsAsFactors = FALSE) str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: chr &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... 甚至也可以建立一個新的、空的data.frame。 df.test就R的用法就是一個變數，並不是df和test各自是一個變數。 df.test &lt;- data.frame() 1.3.2 觀察dataframe View(df) 用RStudio所提供的GUI直接觀看變數 head(df) 取前面六筆資料（也就是六列的資料來概觀該資料） class(df) str(df) summary(df) # View(df) head(df) # get first part of the data.frame ## country import export ## 1 CN 26.142 22.987 ## 2 US 12.008 12.204 ## 3 JP 7.032 11.837 ## 4 HK 13.646 7.739 ## 5 KR 4.589 5.381 ## 6 SG 5.768 4.610 class(df) ## [1] &quot;data.frame&quot; str(df) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ country: chr &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; ... ## $ import : num 26.14 12.01 7.03 13.65 4.59 ... ## $ export : num 22.99 12.2 11.84 7.74 5.38 ... summary(df) ## country import export ## Length:20 Min. : 0.449 Min. : 0.728 ## Class :character 1st Qu.: 1.016 1st Qu.: 1.312 ## Mode :character Median : 2.054 Median : 1.966 ## Mean : 4.536 Mean : 4.374 ## 3rd Qu.: 4.884 3rd Qu.: 4.803 ## Max. :26.142 Max. :22.987 # look up help help(summary) ?summary 1.3.2.1 資料維度 dim(df) ## [1] 20 3 ncol(df) ## [1] 3 nrow(df) ## [1] 20 length(df) ## [1] 3 1.3.3 操作dataframe 1.3.3.1 取出一個變項 names(df) 列出變數名稱 df$發生.現.地點 顯示該變數內容 df$發生時段 顯示該變數內容 length(df$發生時段) 顯示該變數的長度（相當於有幾個） names(df) ## [1] &quot;country&quot; &quot;import&quot; &quot;export&quot; head(df$發生.現.地點) ## NULL head(df$發生時段) ## NULL length(df$發生時段) ## [1] 0 summary(df) ## country import export ## Length:20 Min. : 0.449 Min. : 0.728 ## Class :character 1st Qu.: 1.016 1st Qu.: 1.312 ## Mode :character Median : 2.054 Median : 1.966 ## Mean : 4.536 Mean : 4.374 ## 3rd Qu.: 4.884 3rd Qu.: 4.803 ## Max. :26.142 Max. :22.987 1.3.3.2 (mutate)透過運算產生新變數 這裡容易犯錯的是，要記得跟程式講說你要加總或四則運算的是哪個df的variable。 從下面的這個操作中，該data.frame會產生一個新的變數sub，這就相當於Excel中的某一行減去某一行，然後把資料放在新的一行。 df$sub &lt;- df$import - df$export 1.3.3.3 (filter)篩選資料、選取變數 注意，要告訴程式import和export是哪個data.frame的。 df[,]為存取df中某個區段的數值或某個數值的方法。因此df[1, 1]會取出第一行第一列，也就是第一筆資料的第一個vector。df[2, 3]則會取出第二筆資料的第三個variable。 下面的例子nrow(df)為1894，有1894筆資料，所以自然df\\(import與df\\)export的長度都是1894。因此，比較這兩個變數的大小會得到一個長度為1894的boolean (logical) variable。因此把這個長度為1894、充滿TRUE和FALSE的logical vector丟進df的row之處，因為取自df，大小判斷式結果的長度自然和原本的df的列數相同。因此當這個TRUE/FALSE被丟在df的列之處，便會篩選出import大於p.xport的數值。 原本的df有五個variable，而上述的操作是篩選資料，所以被篩選的是列，因此行的數量、名稱都不會變。因此，我篩選完後，直接存取這個被篩選過的data.frame的country variable，自然是可以的。 df ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 2 US 12.008 12.204 -0.196 ## 3 JP 7.032 11.837 -4.805 ## 4 HK 13.646 7.739 5.907 ## 5 KR 4.589 5.381 -0.792 ## 6 SG 5.768 4.610 1.158 ## 7 DE 2.131 2.866 -0.735 ## 8 MY 2.802 2.784 0.018 ## 9 VN 3.428 2.414 1.014 ## 10 PH 3.019 2.092 0.927 ## 11 TH 1.976 1.839 0.137 ## 12 AU 1.118 1.788 -0.670 ## 13 NL 1.624 1.665 -0.041 ## 14 SA 0.449 1.409 -0.960 ## 15 ID 0.983 1.391 -0.408 ## 16 GB 1.302 1.075 0.227 ## 17 IN 1.027 0.974 0.053 ## 18 FR 0.553 0.899 -0.346 ## 19 IT 0.670 0.800 -0.130 ## 20 AE 0.455 0.728 -0.273 names(df) ## [1] &quot;country&quot; &quot;import&quot; &quot;export&quot; &quot;sub&quot; nrow(df) ## [1] 20 # filter row data by column value df[df$import &gt; df$export,] ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 4 HK 13.646 7.739 5.907 ## 6 SG 5.768 4.610 1.158 ## 8 MY 2.802 2.784 0.018 ## 9 VN 3.428 2.414 1.014 ## 10 PH 3.019 2.092 0.927 ## 11 TH 1.976 1.839 0.137 ## 16 GB 1.302 1.075 0.227 ## 17 IN 1.027 0.974 0.053 df[df$import &gt; df$export,]$country ## [1] &quot;CN&quot; &quot;HK&quot; &quot;SG&quot; &quot;MY&quot; &quot;VN&quot; &quot;PH&quot; &quot;TH&quot; &quot;GB&quot; &quot;IN&quot; df[df$import &gt; df$export,1] ## [1] &quot;CN&quot; &quot;HK&quot; &quot;SG&quot; &quot;MY&quot; &quot;VN&quot; &quot;PH&quot; &quot;TH&quot; &quot;GB&quot; &quot;IN&quot; # 1 row == a data.frame with only one data entry class(df[df$import &gt; df$export,1]) ## [1] &quot;character&quot; class(df[,1]) # character vector ## [1] &quot;character&quot; class(df[1,]) # data.frame ## [1] &quot;data.frame&quot; class(unlist(df[1, -1])) # filter the 1st row and select all columns except 1 ## [1] &quot;numeric&quot; 1.3.3.4 (arrange) 按某個變數排序 df.sorted &lt;- df[order(df$import),]會使得整個df照import的大小排序重新做排列。因為order(df$import)會把資料照指定順序排列後的位置傳回來，所以把他丟給df的列的位置，便會使得df的資料照指定的順序排列。 預設是由小到大，加上decreasing = T這個參數後變成由大而小。 # sort rows by df$import column df.sorted &lt;- df[order(df$import),] # View(df.sorted) # sort rows in decreasing order df.sorted &lt;- df[order(df$import, decreasing = T),] # add - to column in order() can sort in decreasing order df.sorted &lt;- df[order(-df$import),] head(df.sorted) ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 4 HK 13.646 7.739 5.907 ## 2 US 12.008 12.204 -0.196 ## 3 JP 7.032 11.837 -4.805 ## 6 SG 5.768 4.610 1.158 ## 5 KR 4.589 5.381 -0.792 1.3.4 簡易繪圖 graphics::plot()為會預載入R的繪圖套件，如果希望繪圖的同時加上回歸線和資料點標籤的話，必須要三行一起執行。 # plot(df) # raise error, 1st column is a character vector plot(df[, 2:3]) plot(df[1:10, 2:3]) text(import, export, labels=country, cex= 0.5, pos=3) lines(1:25, 1:25, col=&#39;red&#39;) ?plot ## Help on topic &#39;plot&#39; was found in the following packages: ## ## Package Library ## graphics /Library/Frameworks/R.framework/Versions/4.1/Resources/library ## base /Library/Frameworks/R.framework/Resources/library ## ## ## 用第一個符合… 1.3.5 其他：使用dplyr library(dplyr) df &lt;- data.frame(country, import, export, stringsAsFactors = F) df &lt;- mutate(df, sub = import - export) filter(df, import &gt; export) ## country import export sub ## 1 CN 26.142 22.987 3.155 ## 2 HK 13.646 7.739 5.907 ## 3 SG 5.768 4.610 1.158 ## 4 MY 2.802 2.784 0.018 ## 5 VN 3.428 2.414 1.014 ## 6 PH 3.019 2.092 0.927 ## 7 TH 1.976 1.839 0.137 ## 8 GB 1.302 1.075 0.227 ## 9 IN 1.027 0.974 0.053 select(df, c(1, 3)) ## country export ## 1 CN 22.987 ## 2 US 12.204 ## 3 JP 11.837 ## 4 HK 7.739 ## 5 KR 5.381 ## 6 SG 4.610 ## 7 DE 2.866 ## 8 MY 2.784 ## 9 VN 2.414 ## 10 PH 2.092 ## 11 TH 1.839 ## 12 AU 1.788 ## 13 NL 1.665 ## 14 SA 1.409 ## 15 ID 1.391 ## 16 GB 1.075 ## 17 IN 0.974 ## 18 FR 0.899 ## 19 IT 0.800 ## 20 AE 0.728 message(df$country) print(df$country) ## [1] &quot;CN&quot; &quot;US&quot; &quot;JP&quot; &quot;HK&quot; &quot;KR&quot; &quot;SG&quot; &quot;DE&quot; &quot;MY&quot; &quot;VN&quot; &quot;PH&quot; &quot;TH&quot; &quot;AU&quot; &quot;NL&quot; &quot;SA&quot; &quot;ID&quot; ## [16] &quot;GB&quot; &quot;IN&quot; &quot;FR&quot; &quot;IT&quot; &quot;AE&quot; "],["data-manipulation.html", "Chapter 2 Data Manipulation 2.1 base to dplyr: TP Theft", " Chapter 2 Data Manipulation 2.1 base to dplyr: TP Theft library(tidyverse) # options(stringsAsFactors = F) # default options in R ver.&gt; 4.0 2.1.1 Reading data # Read by read_csv() # Will raise error # Error in make.names(x) : invalid multibyte string at &#39;&lt;bd&gt;s&lt;b8&gt;&lt;b9&gt;&#39; # df &lt;- read_csv(&quot;data/tp_theft.csv&quot;) # read_csv() with locale = locale(encoding = &quot;Big5&quot;) library(readr) url &lt;- &quot;https://data.taipei/api/frontstage/tpeod/dataset/resource.download?rid=93d9bc2d-af08-4db7-a56b-9f0a49226fa3&quot; # df &lt;- read_csv(url, locale = locale(encoding = &quot;Big5&quot;)) df &lt;- read_csv(url) 2.1.2 Cleaning data I Renaming variables by select() Generating variable year Generating variable month Retrieving area selected_df &lt;- df %&gt;% select(id = 編號, cat = 案類, date = `發生日期`, time = `發生時段`, location = `發生地點`) %&gt;% mutate(year = date %/% 10000) %&gt;% mutate(month = date %/% 100 %% 100) %&gt;% mutate(area = stringr::str_sub(location, 4, 6)) %&gt;% mutate(county = stringr::str_sub(location, 1, 3)) 2.1.3 Cleaning data II Filtering out irrelevant data records # readr::guess_encoding(&quot;data/tp_theft.csv&quot;) filtered_df &lt;- selected_df %&gt;% # count(year) %&gt;% View filter(county == &quot;臺北市&quot;) %&gt;% filter(year &gt;= 104) %&gt;% # count(time) %&gt;% View # count(location) %&gt;% filter(!area %in% c(&quot;中和市&quot;, &quot;板橋市&quot;)) 2.1.4 Long to wide form count() two variables spread() spread one variable as columns to wide form # count() then spread() df.wide &lt;- filtered_df %&gt;% count(time, area) %&gt;% spread(area, n, fill=0) 2.1.5 Setting time as row.name for mosaicplot row.names(df.wide) &lt;- df.wide$time df.wide$time &lt;- NULL # Specify fonts for Chinese # par(family=(&#39;STKaiti&#39;)) par(family=(&#39;Heiti TC Light&#39;)) # for mac # Specify colors colors &lt;- c(&#39;#D0104C&#39;, &#39;#DB4D6D&#39;, &#39;#E83015&#39;, &#39;#F75C2F&#39;, &#39;#E79460&#39;, &#39;#E98B2A&#39;, &#39;#9B6E23&#39;, &#39;#F7C242&#39;, &#39;#BEC23F&#39;, &#39;#90B44B&#39;, &#39;#66BAB7&#39;, &#39;#1E88A8&#39;) # mosaicplot() mosaicplot(df.wide, color=colors, border=0, off = 3, main=&quot;Theft rate of Taipei city (region by hour)&quot;) 2.1.6 Clean version library(readr) # options(stringsAsFactors = F) url &lt;- &quot;https://data.taipei/api/frontstage/tpeod/dataset/resource.download?rid=93d9bc2d-af08-4db7-a56b-9f0a49226fa3&quot; df &lt;- read_csv(url) selected_df &lt;- df %&gt;% select(id = 編號, cat = 案類, date = `發生日期`, time = `發生時段`, location = `發生地點`) %&gt;% mutate(year = date %/% 10000) %&gt;% mutate(month = date %/% 100 %% 100) %&gt;% mutate(area = stringr::str_sub(location, 4, 6)) %&gt;% mutate(county = stringr::str_sub(location, 1, 3)) selected_df %&gt;% count(year) ## # A tibble: 9 × 2 ## year n ## &lt;dbl&gt; &lt;int&gt; ## 1 103 1 ## 2 104 687 ## 3 105 663 ## 4 106 559 ## 5 107 501 ## 6 108 411 ## 7 109 304 ## 8 110 178 ## 9 111 17 selected_df %&gt;% count(time) ## # A tibble: 25 × 2 ## time n ## &lt;chr&gt; &lt;int&gt; ## 1 00~02 272 ## 2 02~04 212 ## 3 03~05 8 ## 4 04~06 156 ## 5 05~07 18 ## 6 06~08 191 ## 7 08~10 300 ## 8 09~11 6 ## 9 10~12 338 ## 10 11~13 21 ## # … with 15 more rows selected_df %&gt;% arrange(time) ## # A tibble: 3,321 × 9 ## id cat date time location year month area county ## &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2 住宅竊盜 1040101 00~02 臺北市文山區萬美里萬寧… 104 1 文山… 臺北市 ## 2 3 住宅竊盜 1040101 00~02 臺北市信義區富台里忠孝… 104 1 信義… 臺北市 ## 3 6 住宅竊盜 1040102 00~02 臺北市士林區天福里1鄰… 104 1 士林… 臺北市 ## 4 12 住宅竊盜 1040105 00~02 臺北市中山區南京東路3… 104 1 中山… 臺北市 ## 5 33 住宅竊盜 1040115 00~02 臺北市松山區饒河街181~… 104 1 松山… 臺北市 ## 6 74 住宅竊盜 1040131 00~02 臺北市南港區重陽路57巷… 104 1 南港… 臺北市 ## 7 75 住宅竊盜 1040201 00~02 臺北市北投區中心里中和… 104 2 北投… 臺北市 ## 8 92 住宅竊盜 1040210 00~02 臺北市北投區大同路200… 104 2 北投… 臺北市 ## 9 95 住宅竊盜 1040212 00~02 臺北市萬華區萬大路493… 104 2 萬華… 臺北市 ## 10 106 住宅竊盜 1040216 00~02 臺北市信義區吳興街269… 104 2 信義… 臺北市 ## # … with 3,311 more rows filtered_df &lt;- selected_df %&gt;% # count(year) %&gt;% View filter(year &gt;= 104) %&gt;% filter(!time %in% c(&quot;03~05&quot;, &quot;05~07&quot;, &quot;09~11&quot;, &quot;11~13&quot;, &quot;15~17&quot;, &quot;17~19&quot;, &quot;18~21&quot;, &quot;21~23&quot;, &quot;23~01&quot;)) # count(time) %&gt;% View # count(location) %&gt;% # filter(!area %in% c(&quot;中和市&quot;, &quot;板橋市&quot;)) df.wide &lt;- filtered_df %&gt;% count(time, area) %&gt;% spread(area, n, fill=0) %&gt;% as.data.frame() row.names(df.wide) &lt;- df.wide$time df.wide$time &lt;- NULL par(family=(&#39;Heiti TC Light&#39;)) # for mac # Specify colors colors &lt;- c(&#39;#D0104C&#39;, &#39;#DB4D6D&#39;, &#39;#E83015&#39;, &#39;#F75C2F&#39;, &#39;#E79460&#39;, &#39;#E98B2A&#39;, &#39;#9B6E23&#39;, &#39;#F7C242&#39;, &#39;#BEC23F&#39;, &#39;#90B44B&#39;, &#39;#66BAB7&#39;, &#39;#1E88A8&#39;) # mosaicplot() mosaicplot(df.wide, color=colors, border=0, off = 3, main=&quot;Theft rate of Taipei city (region by hour)&quot;) "],["visualization.html", "Chapter 3 Visualization 3.1 ggplot簡介 3.2 繪圖基礎：折線圖 3.3 圖表調整 3.4 視覺化說故事的技巧 3.5 時間軸的視覺化", " Chapter 3 Visualization 3.1 ggplot簡介 本節著重在介紹ggplot的基本概念與設定。不同類型的圖表則在下一節「ggplot圖表類型(II)」 可在一開始便透過knitr::opts_chunk$set(echo = TRUE, fig.width = 2, fig.asp = 0.4)來一次設定所有圖片。fig.width = 8與fig.height = 6 是以英吋（inches）為單位，或用fig.dim = c(8, 6)一次設定長寬1。echo = TRUE是設定knit出輸出格式（如html）時，也要包含程式碼。如果echo = FALSE的話，就只會輸出文字和圖形。 3.2 繪圖基礎：折線圖 3.2.1 繪圖三要素 用ggplot來繪製圖形有三個基本函式ggplot() + aes() + geom_圖表類型。 指定要進行繪圖ggplot()：用%&gt;%將資料（dataframe）pipe給ggplot()後，底下各增添的繪圖選項都用+的符號，類似不斷修正繪圖結果的意思。 指定X／Y軸與群組因子aes()：指定圖表的X/Y軸分別是什麼變數，有些圖表只需要單一個變數（例如Density-chart和Histogram），有些需要X/Y兩個變數（例如Scatter-chart）什麼的變數要做視覺化，Boxplot甚至可以直接指定最大、最小、Q1、Q3和Median等多個變數。 指定要繪製的圖表類型。例如Line-chart為geom_line()、Scatter-chart為geom_point()、Bar-chart為geom_col()或geom_bar()。查閱ggplot cheat sheet可以快速翻閱有哪些圖表類型。 ggplot-cheat-sheet ggplot() 會秀出預備要繪製的繪圖區 tibble(a=1:5, b=5:1) %&gt;% ggplot() 指定X／Y軸與群組因子aes()：aes()會在繪圖區上繪製X與Y軸 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) 指定要繪製的圖表類型。例如Line-chart為geom_line()、 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) + geom_line() 此圖為一雙變數的圖，基於雙變數，可以將不同的圖同時繪製在同一個繪圖區上。例如以下同時繪製了geom_line()與geom_plot()。 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) + geom_line() + geom_point() 3.2.2 範例-紐時世代貧富不均 Teach About Inequality With These 28 New York Times Graphs - The New York Times (nytimes.com) ggplot是以變數為基礎的視覺化套件，也就是說，當準備好dataframe後，就可以在ggplot中指定要用哪些變數來繪圖。也因此，務必把dataframe整理為tidy型態，也就是長表格（long-form）的型態。整理完資料後，我會習慣地用names(plot)或glimpse(plot)來看一下該資料所有的變項，好可以在下一階段的繪圖做參考。 NW &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(Category, year, Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% ungroup() NW %&gt;% glimpse() ## Rows: 66 ## Columns: 3 ## $ Category &lt;chr&gt; &quot;Less than 35&quot;, &quot;35-44&quot;, &quot;45-54&quot;, &quot;55-64&quot;, &quot;65-74&quot;, &quot;75 or o… ## $ year &lt;dbl&gt; 1989, 1989, 1989, 1989, 1989, 1989, 1992, 1992, 1992, 1992, … ## $ Net_Worth &lt;dbl&gt; 16.17019, 112.47530, 195.11630, 195.25554, 154.34277, 144.29… 這是預期視覺化的結果 先將year和Net_worth分別繪製在X與Y軸上，並用geom_line()繪製為折現圖。結果圖表中呈現鋸齒狀的折線，看似有問題，但其實是合理的。因為year是一個離散變數，而我們希望每個年齡層一條線的話，那就要照年齡層來分組。也因此，每一年都有有每個年齡層的資料，當我們把「年」作為X軸時，自然同一年就會有數筆不同年齡層的資料，因此才會是鋸齒狀的。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth) + geom_line() 不同的圖表類型是可以疊加在同一張圖上的。我們也可以把geom_point() 另一種圖表型態加入，也是可以的，兩者的X與Y不相衝突。geom_line()、geom_point()、geom_text()三者會經常伴隨出現。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth) + geom_line() + geom_point() 3.2.3 加入自變項群組 上圖是我們把多個年齡層的逐年資料畫在同一條折線上，所以會呈現鋸齒狀折現的狀況。但這些年齡層並非在同一條線上呀？因此，我們要根據Category這個變數來做分組。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth, group=Category) + geom_line() + geom_point(stat=&quot;identity&quot;) 如希望不同線條上不一樣的色彩，應指定color=Category。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() 用color、fill或group來做分組？ geom_line()的色彩是在線，而不是在面上。如果色彩是在點（如geom_point()）或線（geom_line()）上，就是用color來指定顏色。但如果是如類似下面的例子，用geom_area()來視覺化的話，因為顏色填的是面，所以要用fill=Category。以下範例甚至同時指定color=Category, fill=Category。但折線圖如果要用geom_area()來視覺化的話，最好要上顏色的不要超過二個，不然就會像底下這個例子一樣，即使設定alpha=0.2的半透明，仍然會看不懂哪些顏色疊在一起。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category, fill=Category) + geom_area(position=&quot;dodge&quot;, alpha=0.2) 3.3 圖表調整 3.3.1 點線型態 下面的例子同時用了geom_line()和geom_point()，且分別設定了線寬（size=1）、點的大小(size=2)，折線型態（linetype=\"dashed\"）、半透明程度（alpha）。 ggplot2 line types : How to change line types of a graph in R software? - Easy Guides - Wiki - STHDA NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(size=1, linetype = &quot;dashed&quot;, alpha=0.5) + geom_point(size=2, color=&quot;dimgrey&quot;, alpha=0.5) 3.3.2 標題、標籤與圖說 Titles, labels, and legend 設定標題與X／Y軸標題（法一）：以下設定了圖表的圖表標題、和X軸與Y軸的軸標題（xlab與ylab）。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + xlab(&quot;Year&quot;) + ylab(&quot;Net Worth&quot;) + ggtitle(&quot;Net Worth by year grouped by age groups&quot;) 設定標題與X／Y軸標題（法二）：這是一次設定圖表標題（title）、次標題（suttitle）、X軸與Y軸標題的方法。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, subtitle = &quot;Source from: ...&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) 調整X軸與Y軸標題位置的：必須要透過theme()來設定axis.title.x = element_text(hjust=1)。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + theme(axis.title.x = element_text(hjust=1), axis.title.y = element_text(hjust=1)) 去除X／Y軸標題（不佳）：直接將空字串Assign給title、x、與y即可。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;&quot;, x = &quot;&quot;, y = &quot;&quot;) 去除X／Y軸標題（較佳）：透過設定theme()來調整。可發現透過這種設定方法，原本標題和X／Y軸標題的邊界空間就會被釋放出來。 # No extra space for xlab, ylab and title NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(show.legend = F) + theme_minimal() + theme(plot.title = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank()) 3.3.3 字體樣式 調整字型會建議都從theme()來做調整，所有圖面上看得到的字都有相對應的變數可以調整字型。例如以下的例子中，把標題的字型大小調整為14粗體、X與Y軸的字型則調整了向右對齊、10粗斜體、顏色為dimgrey。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + theme(plot.title = element_text(size=14, face=&quot;bold&quot;), axis.title.x = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;), axis.title.y = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;) ) 3.3.4 圖表主題色調 ggplot也有其圖表主題色調。之前範例的灰色圖表背景就是預設的主題，ggplot中還有好幾個預設圖表主題可以選，例如theme_minimal()或theme_tw()等等。 Modify components of a theme — theme • ggplot2 (tidyverse.org) bbplot/bbc_style.R at master · bbc/bbplot (github.com) NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() 3.3.5 預設主題 如果希望所有的圖表都有一致的顏色和排版的調性，可以在一開始編輯Rmd的時候就設計好一套theme()並指給一個變數（例如以下的th）。 th &lt;- theme(plot.title = element_text(size=14, face=&quot;bold&quot;), axis.title.x = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;), axis.title.y = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;) ) NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(linetype = &quot;dashed&quot;, alpha=0.5) + geom_point(size=2, color=&quot;dimgrey&quot;, alpha=0.5) + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + th 3.3.6 顯示中文字體 Python和R這些程式語言的預設視覺化套件都沒辦法顯示中文，所以如果要顯示中文的話，就要指定圖表標題、X、Y軸標籤、圖說和各個部件的字型。因為我在Mac上繪圖，所以我將字型指定為Heiti TC Light。如果想知道自己的電腦上有什麼可以用，可以到電腦的字體簿上查找中文字體名稱，或者上網google「ggplot 中文字型選擇」。 county &lt;- read_csv(&quot;data/tw_population_opendata110N010.csv&quot;) %&gt;% slice(-1, -(370:375)) %&gt;% type_convert() %&gt;% mutate(county = str_sub(site_id, 1, 3)) %&gt;% group_by(county) %&gt;% summarize( area = sum(area), people_total = sum(people_total) ) %&gt;% ungroup() 下面這是一個長條圖的範例（barplot，不是histogram）。Barplot可以直接指定X軸為縣市（county）和Y軸為總人口數（people_total），但是要用geom_col()而非geom_bar()。除此之外，Bar的顏色有「面」的特徵，所以若要自訂整條bar的顏色，要用fill而非color，color只會是每條Bar的外框。 county %&gt;% arrange(desc(people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;lightgrey&quot;, color=&quot;black&quot;) + theme_minimal() 舉例來說，中文字型可以是標楷體（BiauKai）、宋體（Songti TC）、黑體（Heiti TC Light）、蘋方（PingFang TC）、Noto（Noto Sans CJK TC） th &lt;- theme(title = element_text(family=&quot;Heiti TC Light&quot;), text = element_text(family=&quot;Heiti TC Light&quot;), axis.text.y = element_text(family=&quot;PingFang TC&quot;), axis.text.x = element_text(family=&quot;Heiti TC Light&quot;), legend.text = element_text(family=&quot;Heiti TC Light&quot;), plot.title = element_text(family=&quot;Heiti TC Light&quot;) ) county %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + theme_minimal() + th + theme(axis.text.x = element_text(angle = 45)) 3.3.7 X/Y軸方向 調整圖表方向 county %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + coord_flip() + theme_minimal() + th + theme(axis.text.x = element_text(angle = 45)) 通常coord_flip()後往往會希望這些bar會是由上而下排序好的，但用arrange(desc(people_total)是無法解決問題的，因為Y軸原本會是照Y軸的刻度排列，而不是Y軸的數值。所以，要被排序的應該是Y軸的「文字」也就是那些縣市。因此，我們需要將該縣市轉為factor（1~n），並且讓這些縣市被安排的factor數值照people_total排列，因此要用mutate(county = reorder(county, people_total))。reorder()是一個將文字轉factor的函式，但在此特別指定照people_total的編排。 county %&gt;% # arrange(desc(people_total) %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + coord_flip() + theme_minimal() + th 3.4 視覺化說故事的技巧 「說故事」才是整則資料新聞的核心，在運用圖表來輔助敘事時，應搭配說理說服的內容來突顯（highlight）圖面上的特徵，而不是留待讀者自己觀察。以下有三種highlight圖表部分資料的方法。第一個方法是在繪圖時用+ scale_color_manual()或+ scale_fill_manual()指定顏色給不同群組；方法二是利用gghighlight這個套件來指定要上色的群組，而且gghighlight可以和fill與color相互搭配，仍然可以用scale_fill_manual和scale_color_manual來指定顏色。但會有個狀況是，如果原本沒群組那怎麼辦？就自己用mutate()打造群組就好。方法各有利弊與使用時機。 3.4.1 依群組指定顏色 scale_color_manual() 與scale_fill_manual() NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + scale_color_manual( limits=c(&quot;65-74&quot;, &quot;35-44&quot;), # original chart group values=c(&quot;gold&quot;, &quot;skyblue&quot;), # map to color name=&quot;Age group&quot;, # legend title breaks=c(&quot;65-74&quot;, &quot;35-44&quot;), # original legend group labels labels=c(&quot;elder(65-74)&quot;,&quot;younger(35-44)&quot;), # map to new labels na.value = &quot;lightgrey&quot; # color for other groups ) + theme_minimal() 3.4.2 使用gghighlight套件 library(gghighlight) NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;whitesmoke&quot;, colour = &quot;whitesmoke&quot;, size = 0.5, linetype = &quot;solid&quot;)) 使用gghighlight仍能自己使用scale_color_manual()來指定顏色 NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + scale_color_manual( limits=c(&quot;65-74&quot;, &quot;35-44&quot;), # original chart group values=c(&quot;gold&quot;, &quot;skyblue&quot;)) + # map to color theme_minimal() 3.4.3 為視覺化建立群組 這個方法是在原本的資料並沒有可以作為color或fill的因子，所以自行創建一個要突顯的群組。 county %&gt;% mutate(group = if_else(county %in% c(&quot;新竹縣&quot;, &quot;新竹市&quot;), &quot;highlight&quot;, &quot;other&quot;)) %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total, fill=group) %&gt;% geom_col() + scale_fill_manual(values=c(&quot;highlight&quot;=&quot;Khaki&quot;, &quot;other&quot;=&quot;lightgrey&quot;)) + guides(fill=&quot;none&quot;) + coord_flip() + theme_minimal() + th 但事實上也可以用gghighlight直接達成 county %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;deeppink&quot;) + gghighlight(county %in% c(&quot;新竹縣&quot;, &quot;新竹市&quot;)) + guides(fill=&quot;none&quot;) + coord_flip() + theme_minimal() + th 3.5 時間軸的視覺化 library(tidyverse) library(lubridate) # options(stringsAsFactors = F) # default option in R &gt; 4.0 3.5.1 文字轉時間 Convert “character time” to R date.time object (POSIXct) ptturl &lt;- &quot;https://github.com/P4CSS/R4CSSData/raw/main/ptt_hang_posts.csv&quot; raw &lt;- read.csv(url(ptturl)) clean &lt;- raw %&gt;% mutate(ptime = as.POSIXct(strptime(ptime, &quot;%Y-%m-%dT%H:%M:%SZ&quot;, tz = &quot;ASIA/Taipeiw&quot;))) raw &lt;- read_csv(url(ptturl)) ?read_csv t &lt;- &quot;2019-04-12T00:48:19Z&quot; class(t) ## [1] &quot;character&quot; ?strptime t1 &lt;- strptime(t, &quot;%Y-%m-%dT%H:%M:%SZ&quot;) raw %&gt;% glimpse() ## Rows: 8,317 ## Columns: 7 ## $ plink &lt;chr&gt; &quot;https://www.ptt.cc/bbs/HatePolitics/M.1555035677.A.24B.html&quot;… ## $ board &lt;chr&gt; &quot;HatePolitics&quot;, &quot;HatePolitics&quot;, &quot;HatePolitics&quot;, &quot;HatePolitics… ## $ pcontent &lt;chr&gt; &quot;\\n\\n韓國瑜赴哈佛大學前受訪表示，就是「keeping practice」，盡… ## $ poster &lt;chr&gt; &quot;lovebxcx&quot;, &quot;ikr3699654&quot;, &quot;sunyeah&quot;, &quot;rock720429&quot;, &quot;btm978952… ## $ ptitle &lt;chr&gt; &quot;Re: [新聞] 重申反對一國兩制 韓國瑜：看著我靈魂深&quot;, &quot;Re: [討… ## $ ptime &lt;dttm&gt; 2019-04-12 02:21:14, 2019-04-12 02:13:45, 2019-04-12 02:10:1… ## $ ipaddr &lt;chr&gt; &quot;83.221.204.163&quot;, &quot;114.43.176.110&quot;, &quot;118.163.130.181&quot;, &quot;118.1… 3.5.2 時間作為機率分佈X軸 raw %&gt;% ggplot() + aes(ptime) + geom_density() 3.5.3 逐月統計資料 ?lubridate raw %&gt;% mutate(m = month(ptime)) %&gt;% count(m) %&gt;% ggplot() + aes(m, n) + geom_col() 3.5.4 逐日統計資料（佳） raw %&gt;% filter(ptime &gt;= as_date(&quot;2019-03-18&quot;) &amp; ptime &lt; as_date(&quot;2019-04-01&quot;)) %&gt;% mutate(m = floor_date(ptime, unit = &quot;day&quot;)) %&gt;% count(m) %&gt;% ggplot() + aes(m, n) + geom_col() 3.5.5 每日逐時資料 clean %&gt;% filter(ptime &gt;= as_datetime(&quot;2019-03-25&quot;) &amp; ptime &lt; as_datetime(&quot;2019-04-01&quot;)) %&gt;% mutate(d = floor_date(ptime, unit = &quot;day&quot;)) %&gt;% mutate(h = hour(ptime)) %&gt;% count(d, h) %&gt;% mutate(wd = wday(d, label = F, locale = Sys.getlocale(&quot;LC_TIME&quot;))) %&gt;% mutate(isweekend = ifelse(wd &gt;= 6, &quot;weekend&quot;, &quot;weekday&quot;)) %&gt;% ggplot() + aes(h, n, color = as.character(d)) + geom_line() + facet_wrap(~isweekend) ?ifelse 參考資料：5.4 Control the size of plots/images | R Markdown Cookbook (bookdown.org)↩︎ "],["text-processing.html", "Chapter 4 Text Processing 4.1 Tweets 分析", " Chapter 4 Text Processing 4.1 Tweets 分析 應用dplyr和ggplot做社群輿論資料（tweets）的探索性分析，其中除了dplyr和ggplot外，尚用到文字處理（stringr, extract()）、時間處理（lubridate），甚至包含一點keyness分析，為找出兩個群體文本中，對彼此相對突出關鍵字的文本探勘方法。 本範例取材自David Robinson的blog文章「Text analysis of Trump’s tweets confirms he writes only the (angrier) Android half」。David Robinson是「Text Mining with R」的共同作者， 可參考該書籍上的範例「7 Case study: comparing Twitter archives | Text Mining with R (tidytextmining.com)」。 4.1.1 載入並清理資料 R4.0後stringsAsFactors=F變為預設值，便不用再另行用options()設為全域適用的參數。 library(tidyverse) library(lubridate) options(scipen = 999) th &lt;- theme_minimal() + theme(plot.title = element_text(size=24, face=&quot;bold&quot;), legend.title = element_text(size=18, face=&quot;bold&quot;), legend.text = element_text(size=18), axis.title = element_text(hjust=0.5, size=18, face=&quot;italic&quot;), axis.text = element_text(size=18) ) new_style &lt;- function() { font &lt;- &quot;Helvetica&quot; theme( plot.title = element_text(family=font, size=28, face=&quot;bold&quot;), plot.subtitle = element_text(family=font, size=22, margin=margin(9,0,9,0)), plot.caption = element_blank(), legend.position = &quot;top&quot;, legend.text.align = 0, legend.background = element_blank(), # legend.title = element_blank(), legend.key = element_blank(), legend.text = element_text(family=font, size=18, color=&quot;#222222&quot;), axis.text = element_text(family=font, size=18, color=&quot;#222222&quot;), axis.text.x = element_text(margin=margin(5, b = 10)), axis.ticks = element_blank(), axis.line = element_blank(), panel.grid.minor = element_blank(), panel.grid.major.y = element_line(color=&quot;#cbcbcb&quot;), panel.grid.major.x = element_blank(), panel.background = element_blank(), strip.background = element_rect(fill=&quot;white&quot;), strip.text = element_text(size = 22, hjust = 0) ) } load(url(&quot;http://varianceexplained.org/files/trump_tweets_df.rda&quot;)) dim(trump_tweets_df) ## [1] 1512 16 names(trump_tweets_df) ## [1] &quot;text&quot; &quot;favorited&quot; &quot;favoriteCount&quot; &quot;replyToSN&quot; ## [5] &quot;created&quot; &quot;truncated&quot; &quot;replyToSID&quot; &quot;id&quot; ## [9] &quot;replyToUID&quot; &quot;statusSource&quot; &quot;screenName&quot; &quot;retweetCount&quot; ## [13] &quot;isRetweet&quot; &quot;retweeted&quot; &quot;longitude&quot; &quot;latitude&quot; trump_tweets_df %&gt;% select(id, text, created, favoriteCount, retweetCount, statusSource) %&gt;% head(20) ## # A tibble: 20 × 6 ## id text created favoriteCount retweetCount statusSource ## &lt;chr&gt; &lt;chr&gt; &lt;dttm&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 7626698825… &quot;My … 2016-08-08 15:20:44 9214 3107 &quot;&lt;a href=\\&quot;… ## 2 7626415954… &quot;Joi… 2016-08-08 13:28:20 6981 2390 &quot;&lt;a href=\\&quot;… ## 3 7624396589… &quot;#IC… 2016-08-08 00:05:54 15724 6691 &quot;&lt;a href=\\&quot;… ## 4 7624253718… &quot;Mic… 2016-08-07 23:09:08 19837 6402 &quot;&lt;a href=\\&quot;… ## 5 7624008698… &quot;The… 2016-08-07 21:31:46 34051 11717 &quot;&lt;a href=\\&quot;… ## 6 7622845333… &quot;I s… 2016-08-07 13:49:29 29831 9892 &quot;&lt;a href=\\&quot;… ## 7 7621109187… &quot;Tha… 2016-08-07 02:19:37 19223 5784 &quot;&lt;a href=\\&quot;… ## 8 7621069044… &quot;.@L… 2016-08-07 02:03:39 19543 7930 &quot;&lt;a href=\\&quot;… ## 9 7621044117… &quot;I a… 2016-08-07 01:53:45 75488 24663 &quot;&lt;a href=\\&quot;… ## 10 7620164261… &quot;#Cr… 2016-08-06 20:04:08 23661 7903 &quot;&lt;a href=\\&quot;… ## 11 7619881643… &quot;Hea… 2016-08-06 18:11:50 28069 8561 &quot;&lt;a href=\\&quot;… ## 12 7619369299… &quot;Any… 2016-08-06 14:48:14 35205 13129 &quot;&lt;a href=\\&quot;… ## 13 7619310105… &quot;Cro… 2016-08-06 14:24:43 36936 13250 &quot;&lt;a href=\\&quot;… ## 14 7618928294… &quot;Hil… 2016-08-06 11:53:00 32716 9356 &quot;&lt;a href=\\&quot;… ## 15 7617735761… &quot;Goo… 2016-08-06 03:59:08 34109 10385 &quot;&lt;a href=\\&quot;… ## 16 7617579885… &quot;&#39;Tr… 2016-08-06 02:57:11 19436 8066 &quot;&lt;a href=\\&quot;… ## 17 7617548986… &quot;Tha… 2016-08-06 02:44:55 19330 5418 &quot;&lt;a href=\\&quot;… ## 18 7617118564… &quot;DON… 2016-08-05 23:53:53 30869 16786 &quot;&lt;a href=\\&quot;… ## 19 7616938031… &quot;Tha… 2016-08-05 22:42:08 19431 5681 &quot;&lt;a href=\\&quot;… ## 20 7616538754… &quot;#Ma… 2016-08-05 20:03:29 27568 13869 &quot;&lt;a href=\\&quot;… 4.1.2 萃取資料 Extracting publishing device of tweets # tidyr::extract() # stringr::str_replace trump_tweets_df$statusSource[1] ## [1] &quot;&lt;a href=\\&quot;http://twitter.com/download/android\\&quot; rel=\\&quot;nofollow\\&quot;&gt;Twitter for Android&lt;/a&gt;&quot; tweets &lt;- trump_tweets_df %&gt;% select(id, statusSource, text, created) %&gt;% # mutate(source = str_replace(statusSource, # &quot;.*Twitter for (.*?)&lt;.*&quot;, &quot;\\\\1&quot;)) %&gt;% # mutate(source = str_extract(statusSource, &#39;Twitter for (.*?)&lt;&#39;)) %&gt;% View extract(statusSource, &quot;source&quot;, &quot;Twitter for (.*?)&lt;&quot;) %&gt;% filter(source %in% c(&quot;iPhone&quot;, &quot;Android&quot;)) # Using stringr::str_replace() to mutate a new source variable, replacing tidyr:: # str(tweets) 4.1.3 視覺化探索 4.1.3.1 發文時間 Converting timezone lubridate::with_tz() Extracting hour of timestamp by lubridate::hour() Plotting number of tweets by hour Display y-axis as percentage by scales::percent_format() library(scales) # for percent_format() # lubridate::hour() # lubridate::with_tz() # scales::percent_format() toplot1 &lt;- tweets %&gt;% count(source, hour = hour(with_tz(created, &quot;EST&quot;))) %&gt;% # group_by(source) %&gt;% mutate(percent = n / sum(n)) # ungroup() %&gt;% toplot2 &lt;- tweets %&gt;% count(source, hour = hour(with_tz(created, &quot;EST&quot;))) %&gt;% group_by(source) %&gt;% mutate(percent = n / sum(n)) %&gt;% ungroup() p1 &lt;- toplot1 %&gt;% ggplot() + aes(hour, percent, color = source) + geom_line(size = 1) + scale_color_manual(name = &quot;Phone System&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Hour of day (EST)&quot;, y = &quot;% of tweets&quot;, color = &quot;&quot;) + theme_minimal() p2 &lt;- toplot2 %&gt;% ggplot() + aes(hour, percent, color = source) + geom_line(size = 1) + scale_color_manual(name = &quot;Phone System&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Hour of day (EST)&quot;, y = &quot;% of tweets&quot;, color = &quot;&quot;) + theme_minimal() cowplot::plot_grid( p1, NULL, p2, labels = c(&quot;(a) Normalized by all&quot;, &quot;&quot;, &quot;(b) Normalized in group&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 4.1.3.2 發文附圖 Filtering out tweets starting with \" (those tweets mention #realdonaldtrump) Mutating new variable picture to indicate whether text has picture or not? Counting source by picture Plotting bar chart to compare difference between sources. # library(stringr) toplot &lt;- tweets %&gt;% filter(!str_detect(text, &#39;^&quot;&#39;)) %&gt;% mutate(picture = if_else(str_detect(text, &quot;t.co&quot;), &quot;Picture/link&quot;, &quot;No picture/link&quot;)) %&gt;% count(source, picture) p1 &lt;- toplot %&gt;% ggplot() + aes(source, n, fill = picture) + geom_col(position=&quot;stack&quot;, width = 0.5) + scale_fill_manual(name = &quot;With Picture/link?&quot;, labels = c(&quot;Yes&quot;, &quot;No&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + labs(x = &quot;&quot;, y = &quot;Number of tweets&quot;, fill = &quot;&quot;) + theme_minimal() p2 &lt;- toplot %&gt;% ggplot() + aes(source, n, fill = picture) + geom_col(position=&quot;dodge&quot;) + scale_fill_manual(name = &quot;With Picture/link?&quot;, labels = c(&quot;Yes&quot;, &quot;No&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + labs(x = &quot;&quot;, y = &quot;Number of tweets&quot;, fill = &quot;&quot;) + theme_minimal() cowplot::plot_grid( p1, NULL, p2, labels = c(&quot;(a) Stacked&quot;, &quot;&quot;, &quot;(b) Dodged&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 4.1.4 Keyness library(tidytext) # unnest_tokens() library(stringr) # str_detect(), str_replace_all() # View(test) # stop_words$word tweet_words &lt;- tweets %&gt;% filter(!str_detect(text, &#39;^&quot;&#39;)) %&gt;% mutate(text = str_replace_all(text, &quot;https://t.co/[A-Za-z\\\\d]+|&amp;amp;&quot;, &quot;&quot;)) %&gt;% # unnest_tokens(word, text) %&gt;% # unnest_tokens(word, text, token = &quot;regex&quot;, pattern = &quot;[^A-Za-z\\\\d#@&#39;]&quot;) %&gt;% mutate(word = str_split(text, &quot; &quot;)) %&gt;% select(id, text, word, everything()) %&gt;% unnest(word) %&gt;% filter(!word %in% stop_words$word, str_detect(word, &quot;[a-z]&quot;)) # View(tweet_words) tweet_words %&gt;% count(word, sort = TRUE) %&gt;% head(20) %&gt;% mutate(word = reorder(word, n)) %&gt;% ggplot(aes(word, n)) + geom_col(fill = &quot;royalblue&quot;) + ylab(&quot;Occurrences&quot;) + coord_flip() + theme_minimal() + theme(axis.text = element_text(size=10)) 4.1.4.1 詞頻差異 test &lt;- tweet_words %&gt;% count(word, source) %&gt;% filter(n &gt;= 5) %&gt;% pivot_wider(names_from = source, values_from = n, values_fill = 0) # View(test) word_by_source &lt;- tweet_words %&gt;% count(word, source) %&gt;% filter(n &gt;= 5) %&gt;% pivot_wider(names_from = source, values_from = n, values_fill = 0) %&gt;% # spread(source, n, fill = 0) %&gt;% ungroup() sum(word_by_source$iPhone) ## [1] 1383 sum(word_by_source$Android) ## [1] 2132 android_iphone_ratios &lt;- word_by_source %&gt;% mutate(iPhone = (iPhone+1)/sum(iPhone+1)) %&gt;% mutate(Android = (Android+1)/sum(Android+1)) %&gt;% # mutate_at(.cols = vars(iPhone, Android), # .funs = funs((. + 1) / sum(. + 1))) %&gt;% mutate(logratio = log2(Android / iPhone)) %&gt;% arrange(desc(logratio)) 4.1.4.2 視覺化log-ratio android_iphone_ratios %&gt;% group_by(logratio &gt; 0) %&gt;% top_n(15, abs(logratio)) %&gt;% ungroup() %&gt;% mutate(word = reorder(word, logratio)) %&gt;% ggplot(aes(word, logratio, fill = logratio &lt; 0)) + geom_col() + coord_flip() + ylab(&quot;Android / iPhone log ratio&quot;) + scale_fill_manual(name = &quot;&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + theme_minimal() + theme(axis.text = element_text(size=14)) "],["crawler.html", "Chapter 5 Crawler 5.1 Scraping 104.com", " Chapter 5 Crawler 5.1 Scraping 104.com 5.1.1 Complete Code library(tidyverse) library(httr) library(jsonlite) # options(stringsAsFactors = F) all.df &lt;- tibble() refer_url &lt;- &quot;https://www.104.com.tw&quot; for(p in 1:10){ url &lt;- str_c(&#39;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E8%B3%87%E6%96%99%E7%A7%91%E5%AD%B8&amp;order=12&amp;asc=0&amp;page=&#39;, p, &quot;&amp;mode=s&amp;jobsource=2018indexpoc&quot;) print(p) res &lt;- GET(url, add_headers(&quot;referer&quot;=refer_url)) %&gt;% content(&quot;text&quot;) %&gt;% fromJSON() res$data$list$tags &lt;- NULL res$data$list$link &lt;- NULL all.df &lt;- bind_rows(all.df, res$data$list) } all.df$jobNo %&gt;% unique %&gt;% length 5.1.2 Step-by-Step 5.1.2.1 Get the first pages Must loading the second page url1 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=1&amp;mode=s&amp;jobsource=2018indexpoc&quot; # Assigning the 2nd page data url to url2 url2 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E8%B3%87%E6%96%99%E7%A7%91%E5%AD%B8&amp;order=14&amp;asc=0&amp;page=2&amp;mode=s&amp;jobsource=2018indexpoc&quot; # Assigning the 3rd page data url to url3 url3 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=3&amp;mode=s&amp;jobsource=2018indexpoc&quot; # Getting back the url1 data, assigning to result1 res &lt;- GET(url2, config = add_headers(&quot;Referer&quot; = &quot;https://www.104.com.tw/&quot;)) res1 &lt;- content(res, &quot;text&quot;) %&gt;% fromJSON() result2 &lt;- fromJSON(content(GET(url2), &quot;text&quot;)) # Tracing variable result2 and finding the data.frame, assigning to df2 df2 &lt;- res1$data$list 5.1.2.2 Get the first page by modifying url # Guessing the 1st page data url to url1 url1 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=1&amp;mode=s&amp;jobsource=2018indexpoc&quot; # Getting back the 1st page data url1 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=1&amp;mode=s&amp;jobsource=2018indexpoc&quot; result1 &lt;- fromJSON(content(GET(url1), &quot;text&quot;)) df1 &lt;- result1$data$list 5.1.2.3 Combine two data with the same variables # all.df &lt;- bind_rows(df1, df2) # will raise error # Error in bind_rows_(x, .id) : # Argument 31 can&#39;t be a list containing data frames 5.1.2.4 Drop out hierarchical variables Preserving numeric or character, dropping list of data.frame by assigning NULL to the variable # Drop list and data.frame inside the data.frame df1$link &lt;- NULL df1$tags &lt;- NULL df2$link &lt;- NULL df2$tags &lt;- NULL # Re-binding two data.frame df1 and df2 all.df &lt;- bind_rows(df1, df2) 5.1.2.5 Dropping hierarchical variables by dplyr way # Getting the 1st page data and dropping variable tags and link # Assigning to df1 df1 &lt;- result1$data$list %&gt;% select(-tags, -link) # Getting the 2nd page data and dropping variable tags and link # Assigning to df2 df2 &lt;- result2$data$list %&gt;% select(-tags, -link) # binding df1 and df2 all.df &lt;- bind_rows(df1, df2) 5.1.2.6 Finding out the last page number # Tracing the number of pages in result1 last_page_num &lt;- result1$data$totalPage # Checking the availability of the last page # Examining if the last page data available by re-composing URL with paste0() url.last_page &lt;- paste0(&quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=&quot;, last_page_num, &quot;&amp;mode=s&amp;jobsource=2018indexpoc&quot;) # Getting back and parsing the last page data result.last_page &lt;- fromJSON(content(GET(url.last_page), &quot;text&quot;)) 5.1.2.7 Using for-loop to get all pages for(p in 1:last_page_num){ url &lt;- paste0(&quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=&quot;, p, &quot;&amp;mode=s&amp;jobsource=2018indexpoc&quot;) result &lt;- fromJSON(content(GET(url), &quot;text&quot;)) temp.df &lt;- select(result$data$list) print(paste(p, nrow(temp.df))) } 5.1.2.8 combine all data.frame # The 1st url of the query url1 &lt;- &quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=1&amp;mode=s&amp;jobsource=2018indexpoc&quot; # Getting back the 1st page data result1 &lt;- fromJSON(content(GET(url1), &quot;text&quot;)) # Tracing and getting total number of page last_page_num &lt;- result1$data$totalPage # Truncating hierarchical variables: link and tags all.df &lt;- select(result1$data$list, -link, -tags) # for-loop to getting back data and joining them for(p in 1:last_page_num){ url &lt;- paste0(&quot;https://www.104.com.tw/jobs/search/list?ro=0&amp;kwop=7&amp;keyword=%E7%88%AC%E8%9F%B2&amp;order=1&amp;asc=0&amp;page=&quot;, p, &quot;&amp;mode=s&amp;jobsource=2018indexpoc&quot;) result &lt;- fromJSON(content(GET(url), &quot;text&quot;)) temp.df &lt;- select(result$data$list) all.df &lt;- bind_rows(all.df, temp.df) print(paste(p, nrow(all.df))) } "],["tw-data-visualization.html", "Chapter 6 TW Data Visualization 6.1 Coordination &amp; Axis 6.2 Log-scale 6.3 Square-root scale 6.4 TW-Salary (boxplot) 6.5 TW-Income (boxplot)", " Chapter 6 TW Data Visualization library(tidyverse) options(stringsAsFactors = F) options(scipen = 999) th &lt;- theme_minimal() + theme(title = element_text(family=&quot;Heiti TC Light&quot;), text = element_text(family=&quot;Heiti TC Light&quot;), axis.text.y = element_text(family=&quot;Heiti TC Light&quot;), axis.text.x = element_text(family=&quot;Heiti TC Light&quot;), legend.text = element_text(family=&quot;Heiti TC Light&quot;), plot.title = element_text(family=&quot;Heiti TC Light&quot;) ) 6.1 Coordination &amp; Axis Chap3 Coordination &amp; Axis Fundamentals of Data Visualization (clauswilke.com) Figure 3.5: Population numbers of Texas counties relative to their median value. Select counties are highlighted by name. The dashed line indicates a ratio of 1, corresponding to a county with median population number. The most populous counties have approximately 100 times more inhabitants than the median county, and the least populous counties have approximately 100 times fewer inhabitants than the median county. Data source: 2010 Decennial U.S. Census. See What’s Going On in This Graph? | Vaccination by Country fromWhat Data Shows About Vaccine Supply and Demand in the Most Vulnerable Places - The New York Times (nytimes.com) The original chart is animated along the timeline.What Data Shows About Vaccine Supply and Demand in the Most Vulnerable Places - The New York Times (nytimes.com) 6.2 Log-scale raw &lt;- read_csv(&quot;data/opendata107Y020.csv&quot;, show_col_types = FALSE) %&gt;% slice(-1) %&gt;% type_convert() toplot &lt;- raw %&gt;% select(site_id, village, edu_age_15up_total) %&gt;% arrange(desc(edu_age_15up_total)) %&gt;% mutate(index = row_number()) %&gt;% mutate(label = ifelse(index &lt;= 5 | index &gt; n()-5, paste0(site_id, village), &quot;&quot;)) library(ggrepel) p2 &lt;- toplot %&gt;% ggplot() + aes(index, edu_age_15up_total) + geom_point(alpha=0.5, color=&quot;royalblue&quot;) + geom_text_repel(aes(label = label), point.padding = .4, color = &quot;black&quot;, min.segment.length = 0, family = &quot;Heiti TC Light&quot;) + theme(axis.text.x=element_blank()) + scale_y_log10(breaks = c(0, 1, 10, 100, 1000, 10000)) + theme_minimal() p1 &lt;- toplot %&gt;% ggplot() + aes(index, edu_age_15up_total) + geom_point(alpha=0.5, color=&quot;royalblue&quot;) + theme(axis.text.x=element_blank()) + theme_minimal() cowplot::plot_grid( p2, NULL, p1, labels = c(&quot;a&quot;, &quot;&quot;, &quot;b&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 6.3 Square-root scale Chap3 Coordination &amp; Axis Fundamentals of Data Visualization (clauswilke.com) Figure 3.8: Areas of Northeastern U.S. states. (a) Areas shown on a linear scale. (b) Areas shown on a square-root scale. Data source: Google. 前面是視覺化了各村里大於十五歲以上人口的人口數分佈，採用對數尺度（log-scale）可以觀察到比較小的村里。那有什麼是適合用平方根尺度（sqrt-scale）的呢？是土地嗎？密度嗎？還是人口數？是村里等級嗎？鄉鎮市區等級嗎？還是縣市等級？ town &lt;- read_csv(&quot;data/tw_population_opendata110N010.csv&quot;) %&gt;% slice(-1, -(370:375)) %&gt;% type_convert() town %&gt;% arrange(desc(area)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, area) %&gt;% geom_col(fill=&quot;skyblue&quot;) + scale_y_sqrt() + theme_minimal() county &lt;- town %&gt;% mutate(county = str_sub(site_id, 1, 3)) %&gt;% group_by(county) %&gt;% summarize( area = sum(area), people_total = sum(people_total) ) %&gt;% ungroup() p1 &lt;- county %&gt;% arrange(desc(people_total)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, people_total) %&gt;% geom_col(fill=&quot;lightgrey&quot;) + # scale_y_sqrt() + theme_minimal() p2 &lt;- county %&gt;% arrange(desc(people_total)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, people_total) %&gt;% geom_col(fill=&quot;khaki&quot;) + scale_y_sqrt(breaks=c(0, 250000, 500000, 1000000, 2000000, 4000000)) + theme_minimal() cowplot::plot_grid( p1, p2, labels = c(&quot;a&quot;, &quot;b&quot;), nrow = 1 ) 6.4 TW-Salary (boxplot) Inspired by Six Myths About Choosing a College Major - The New York Times (nytimes.com) and What’s Going On in This Graph? | Jan. 9, 2018 - The New York Times (nytimes.com) library(readxl) raw &lt;- read_excel(&quot;data/tw_salary109.xlsx&quot;, sheet=1, trim_ws = T) raw raw %&gt;% slice(-(1:12)) %&gt;% mutate(Category = reorder(Category, desc(Median))) %&gt;% ggplot() + aes(y = Category, xlower=Q1, xmiddle=Median, xupper=Q3, xmin=0, xmax=150) + geom_boxplot(stat = &quot;identity&quot;, color=&quot;white&quot;, fill=&quot;skyblue&quot;) + geom_point(aes(x = Mean)) + th + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) 6.5 TW-Income (boxplot) library(gghighlight) toplot &lt;- read_csv(&quot;data/tw_income_107.csv&quot;, ) %&gt;% filter(!`村里` %in% c(&quot;合計&quot;, &quot;其他&quot;, &quot;福住里&quot;)) %&gt;% filter(鄉鎮市區 %in% c(&quot;信義區&quot;)) %&gt;% mutate(村里 = reorder(村里, desc(中位數))) toplot %&gt;% mutate(group = if_else((平均數&gt;第三分位數), &quot;highlight&quot;, &quot;none&quot;)) %&gt;% ggplot() + aes(y = 村里, xlower=第一分位數, xmiddle=中位數, xupper=第三分位數, xmin= min(第一分位數), xmax=max(第三分位數), fill=group) + geom_boxplot(stat = &quot;identity&quot;, color=&quot;white&quot;) + scale_fill_manual(values = c(&quot;highlight&quot;=&quot;orangered&quot;, &quot;none&quot;=&quot;skyblue&quot;)) + guides(fill=FALSE) + geom_point(aes(x = 平均數)) + xlab(&quot;年所得（單位：千元）&quot;) + th + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) "],["wgoigt-of-nytimes.html", "Chapter 7 WGOIGT of NyTimes 7.1 Net Worth by Age Group 7.2 UNICEF-Optimistic 7.3 Global Carbon Projects", " Chapter 7 WGOIGT of NyTimes library(tidyverse) library(gghighlight) 7.1 Net Worth by Age Group LEARNING NOTES Median for Inequality 這個教學案例來自紐約時報的「What’s going on in this gragh」系列資料視覺化教學之Teach About Inequality With These 28 New York Times Graphs - The New York Times (nytimes.com) 。該圖表呈現在不同年代、不同年齡層的人所擁有的淨資產（包含土地、存款、投資等減去債務）。該圖表的結果指出，在不同年代的老年人是越來越有錢，但年輕人卻越來越窮（該曲線為減去1989年 7.1.1 Read and sort data Sorted by arrange() function. p1 &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(year, Category, Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% ungroup() p1 %&gt;% filter(year &lt;= 1992) %&gt;% knitr::kable() p1 %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line(linetype=&quot;dotted&quot;) + geom_point() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;white&quot;, size = 0.5, linetype = &quot;solid&quot;)) p2 &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(year, Category, NW = Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% mutate(increase = (NW-first(NW))/first(NW)) %&gt;% ungroup() p2 %&gt;% filter(year &lt;= 1992) %&gt;% knitr::kable() p2 %&gt;% ggplot() + aes(year, increase, color = Category) + geom_line(linetype=&quot;dotted&quot;) + geom_point() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_y_continuous(labels=scales::parse_format()) + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;white&quot;, size = 0.5, linetype = &quot;solid&quot;)) 7.2 UNICEF-Optimistic https://www.nytimes.com/2021/11/17/upshot/global-survey-optimism.html https://changingchildhood.unicef.org/about plot.opt &lt;- read_csv(&quot;nytdata/unicef-changing-childhood-data.csv&quot;) %&gt;% select(country = WP5, age = WP22140, bw = WP22092) %&gt;% mutate(country = ordered(country, levels=c(1, 3, 4, 10, 11, 12, 13, 14, 17, 29, 31, 33, 35, 36, 60, 61, 77, 79, 81, 87, 165), labels=c(&quot;USA&quot;, &quot;Morocco&quot;, &quot;Lebanon&quot;, &quot;Indonesia&quot;, &quot;Bangladesh&quot;, &quot;UK&quot;, &quot;France&quot;, &quot;Germany&quot;, &quot;Spain&quot;, &quot;Japan&quot;, &quot;India&quot;, &quot;Brazil&quot;, &quot;Nigeria&quot;, &quot;Kenya&quot;, &quot;Ethiopia&quot;, &quot;Mali&quot;, &quot;Ukraine&quot;, &quot;Cameroon&quot;, &quot;Zimbabwe&quot;, &quot;Argentina&quot;, &quot;Peru&quot;))) %&gt;% count(country, age, bw) %&gt;% group_by(country, age) %&gt;% mutate(perc = n/sum(n)) %&gt;% ungroup() %&gt;% filter(bw == 1) %&gt;% select(country, age, perc) %&gt;% spread(age, perc) %&gt;% rename(`15-24y` = `1`, `40+y` = `2`) plot.opt %&gt;% head(10) %&gt;% knitr::kable() plot.opt %&gt;% ggplot() + aes(`40+y`, `15-24y`, label = country) + geom_point(color = &quot;skyblue&quot;, size = 2) + xlim(0, 1) + ylim(0,1) + geom_text(hjust = -0.1, vjust = -0.5) + geom_abline(intercept = 0, slop = 1, color=&quot;lightgrey&quot;, alpha=0.5, linetype=&quot;dashed&quot;) + theme_minimal() + theme(aspect.ratio=1) 7.3 Global Carbon Projects Who Has The Most Historical Responsibility for Climate Change? - The New York Times (nytimes.com) totreemap &lt;- read_csv(&quot;nytdata/GCB2021v34_MtCO2_flat.csv&quot;) %&gt;% drop_na(`Total`) %&gt;% filter(!Country %in% c(&quot;Global&quot;, &quot;International Transport&quot;)) %&gt;% filter(Year==2020) %&gt;% arrange(desc(`Total`)) %&gt;% mutate(perc = Total/sum(Total)) %&gt;% slice(1:20) library(treemapify) totreemap %&gt;% ggplot() + aes(area = perc, fill=`Per Capita`, label=Country) + geom_treemap() + geom_treemap_text(color=&quot;white&quot;, place=&quot;centre&quot;, grow=TRUE ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
