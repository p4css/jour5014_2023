[["index.html", "R for Data Journalism About", " R for Data Journalism HSIEH, JI-LUNG 2022-04-26 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. "],["visualization.html", "Chapter 1 Visualization 1.1 ggplot簡介 1.2 繪圖基礎：折線圖 1.3 圖表調整 1.4 視覺化說故事的技巧 1.5 時間軸的視覺化", " Chapter 1 Visualization 1.1 ggplot簡介 本節著重在介紹ggplot的基本概念與設定。不同類型的圖表則在下一節「ggplot圖表類型(II)」 可在一開始便透過knitr::opts_chunk$set(echo = TRUE, fig.width = 2, fig.asp = 0.4)來一次設定所有圖片。fig.width = 8與fig.height = 6 是以英吋（inches）為單位，或用fig.dim = c(8, 6)一次設定長寬1。echo = TRUE是設定knit出輸出格式（如html）時，也要包含程式碼。如果echo = FALSE的話，就只會輸出文字和圖形。 1.2 繪圖基礎：折線圖 1.2.1 繪圖三要素 用ggplot來繪製圖形有三個基本函式ggplot() + aes() + geom_圖表類型。 指定要進行繪圖ggplot()：用%&gt;%將資料（dataframe）pipe給ggplot()後，底下各增添的繪圖選項都用+的符號，類似不斷修正繪圖結果的意思。 指定X／Y軸與群組因子aes()：指定圖表的X/Y軸分別是什麼變數，有些圖表只需要單一個變數（例如Density-chart和Histogram），有些需要X/Y兩個變數（例如Scatter-chart）什麼的變數要做視覺化，Boxplot甚至可以直接指定最大、最小、Q1、Q3和Median等多個變數。 指定要繪製的圖表類型。例如Line-chart為geom_line()、Scatter-chart為geom_point()、Bar-chart為geom_col()或geom_bar()。查閱ggplot cheat sheet可以快速翻閱有哪些圖表類型。 ggplot-cheat-sheet ggplot() 會秀出預備要繪製的繪圖區 tibble(a=1:5, b=5:1) %&gt;% ggplot() 指定X／Y軸與群組因子aes()：aes()會在繪圖區上繪製X與Y軸 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) 指定要繪製的圖表類型。例如Line-chart為geom_line()、 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) + geom_line() 此圖為一雙變數的圖，基於雙變數，可以將不同的圖同時繪製在同一個繪圖區上。例如以下同時繪製了geom_line()與geom_plot()。 tibble(a=1:5, b=5:1) %&gt;% ggplot() + aes(x=a, y=b) + geom_line() + geom_point() 1.2.2 範例-紐時世代貧富不均 Teach About Inequality With These 28 New York Times Graphs - The New York Times (nytimes.com) ggplot是以變數為基礎的視覺化套件，也就是說，當準備好dataframe後，就可以在ggplot中指定要用哪些變數來繪圖。也因此，務必把dataframe整理為tidy型態，也就是長表格（long-form）的型態。整理完資料後，我會習慣地用names(plot)或glimpse(plot)來看一下該資料所有的變項，好可以在下一階段的繪圖做參考。 NW &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(Category, year, Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% ungroup() NW %&gt;% glimpse() ## Rows: 66 ## Columns: 3 ## $ Category &lt;chr&gt; &quot;Less than 35&quot;, &quot;35-44&quot;, &quot;45-54&quot;, &quot;55-64&quot;, &quot;65-74&quot;, &quot;75 or o… ## $ year &lt;dbl&gt; 1989, 1989, 1989, 1989, 1989, 1989, 1992, 1992, 1992, 1992, … ## $ Net_Worth &lt;dbl&gt; 16.17019, 112.47530, 195.11630, 195.25554, 154.34277, 144.29… 這是預期視覺化的結果 先將year和Net_worth分別繪製在X與Y軸上，並用geom_line()繪製為折現圖。結果圖表中呈現鋸齒狀的折線，看似有問題，但其實是合理的。因為year是一個離散變數，而我們希望每個年齡層一條線的話，那就要照年齡層來分組。也因此，每一年都有有每個年齡層的資料，當我們把「年」作為X軸時，自然同一年就會有數筆不同年齡層的資料，因此才會是鋸齒狀的。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth) + geom_line() 不同的圖表類型是可以疊加在同一張圖上的。我們也可以把geom_point() 另一種圖表型態加入，也是可以的，兩者的X與Y不相衝突。geom_line()、geom_point()、geom_text()三者會經常伴隨出現。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth) + geom_line() + geom_point() 1.2.3 加入自變項群組 上圖是我們把多個年齡層的逐年資料畫在同一條折線上，所以會呈現鋸齒狀折現的狀況。但這些年齡層並非在同一條線上呀？因此，我們要根據Category這個變數來做分組。 NW %&gt;% ggplot() + aes(x=year, y=Net_Worth, group=Category) + geom_line() + geom_point(stat=&quot;identity&quot;) 如希望不同線條上不一樣的色彩，應指定color=Category。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() 用color、fill或group來做分組？ geom_line()的色彩是在線，而不是在面上。如果色彩是在點（如geom_point()）或線（geom_line()）上，就是用color來指定顏色。但如果是如類似下面的例子，用geom_area()來視覺化的話，因為顏色填的是面，所以要用fill=Category。以下範例甚至同時指定color=Category, fill=Category。但折線圖如果要用geom_area()來視覺化的話，最好要上顏色的不要超過二個，不然就會像底下這個例子一樣，即使設定alpha=0.2的半透明，仍然會看不懂哪些顏色疊在一起。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category, fill=Category) + geom_area(position=&quot;dodge&quot;, alpha=0.2) 1.3 圖表調整 1.3.1 點線型態 下面的例子同時用了geom_line()和geom_point()，且分別設定了線寬（size=1）、點的大小(size=2)，折線型態（linetype=\"dashed\"）、半透明程度（alpha）。 ggplot2 line types : How to change line types of a graph in R software? - Easy Guides - Wiki - STHDA NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(size=1, linetype = &quot;dashed&quot;, alpha=0.5) + geom_point(size=2, color=&quot;dimgrey&quot;, alpha=0.5) 1.3.2 標題、標籤與圖說 Titles, labels, and legend 設定標題與X／Y軸標題（法一）：以下設定了圖表的圖表標題、和X軸與Y軸的軸標題（xlab與ylab）。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + xlab(&quot;Year&quot;) + ylab(&quot;Net Worth&quot;) + ggtitle(&quot;Net Worth by year grouped by age groups&quot;) 設定標題與X／Y軸標題（法二）：這是一次設定圖表標題（title）、次標題（suttitle）、X軸與Y軸標題的方法。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, subtitle = &quot;Source from: ...&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) 調整X軸與Y軸標題位置的：必須要透過theme()來設定axis.title.x = element_text(hjust=1)。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + theme(axis.title.x = element_text(hjust=1), axis.title.y = element_text(hjust=1)) 去除X／Y軸標題（不佳）：直接將空字串Assign給title、x、與y即可。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;&quot;, x = &quot;&quot;, y = &quot;&quot;) 去除X／Y軸標題（較佳）：透過設定theme()來調整。可發現透過這種設定方法，原本標題和X／Y軸標題的邊界空間就會被釋放出來。 # No extra space for xlab, ylab and title NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(show.legend = F) + theme_minimal() + theme(plot.title = element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank()) 1.3.3 字體樣式 調整字型會建議都從theme()來做調整，所有圖面上看得到的字都有相對應的變數可以調整字型。例如以下的例子中，把標題的字型大小調整為14粗體、X與Y軸的字型則調整了向右對齊、10粗斜體、顏色為dimgrey。 NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + theme(plot.title = element_text(size=14, face=&quot;bold&quot;), axis.title.x = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;), axis.title.y = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;) ) 1.3.4 圖表主題色調 ggplot也有其圖表主題色調。之前範例的灰色圖表背景就是預設的主題，ggplot中還有好幾個預設圖表主題可以選，例如theme_minimal()或theme_tw()等等。 Modify components of a theme — theme • ggplot2 (tidyverse.org) bbplot/bbc_style.R at master · bbc/bbplot (github.com) NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line() + theme_minimal() 1.3.5 預設主題 如果希望所有的圖表都有一致的顏色和排版的調性，可以在一開始編輯Rmd的時候就設計好一套theme()並指給一個變數（例如以下的th）。 th &lt;- theme(plot.title = element_text(size=14, face=&quot;bold&quot;), axis.title.x = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;), axis.title.y = element_text(hjust=1, size=10, color=&quot;dimgrey&quot;, face=&quot;bold.italic&quot;) ) NW %&gt;% ggplot() + aes(year, Net_Worth, color=Category) + geom_line(linetype = &quot;dashed&quot;, alpha=0.5) + geom_point(size=2, color=&quot;dimgrey&quot;, alpha=0.5) + theme_minimal() + labs(title = &quot;Net Worth by year grouped by age groups&quot;, x = &quot;Year&quot;, y = &quot;Net Worth&quot;) + th 1.3.6 顯示中文字體 Python和R這些程式語言的預設視覺化套件都沒辦法顯示中文，所以如果要顯示中文的話，就要指定圖表標題、X、Y軸標籤、圖說和各個部件的字型。因為我在Mac上繪圖，所以我將字型指定為Heiti TC Light。如果想知道自己的電腦上有什麼可以用，可以到電腦的字體簿上查找中文字體名稱，或者上網google「ggplot 中文字型選擇」。 county &lt;- read_csv(&quot;data/tw_population_opendata110N010.csv&quot;) %&gt;% slice(-1, -(370:375)) %&gt;% type_convert() %&gt;% mutate(county = str_sub(site_id, 1, 3)) %&gt;% group_by(county) %&gt;% summarize( area = sum(area), people_total = sum(people_total) ) %&gt;% ungroup() 下面這是一個長條圖的範例（barplot，不是histogram）。Barplot可以直接指定X軸為縣市（county）和Y軸為總人口數（people_total），但是要用geom_col()而非geom_bar()。除此之外，Bar的顏色有「面」的特徵，所以若要自訂整條bar的顏色，要用fill而非color，color只會是每條Bar的外框。 county %&gt;% arrange(desc(people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;lightgrey&quot;, color=&quot;black&quot;) + theme_minimal() 舉例來說，中文字型可以是標楷體（BiauKai）、宋體（Songti TC）、黑體（Heiti TC Light）、蘋方（PingFang TC）、Noto（Noto Sans CJK TC） th &lt;- theme(title = element_text(family=&quot;Heiti TC Light&quot;), text = element_text(family=&quot;Heiti TC Light&quot;), axis.text.y = element_text(family=&quot;PingFang TC&quot;), axis.text.x = element_text(family=&quot;Heiti TC Light&quot;), legend.text = element_text(family=&quot;Heiti TC Light&quot;), plot.title = element_text(family=&quot;Heiti TC Light&quot;) ) county %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + theme_minimal() + th + theme(axis.text.x = element_text(angle = 45)) 1.3.7 X/Y軸方向 調整圖表方向 county %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + coord_flip() + theme_minimal() + th + theme(axis.text.x = element_text(angle = 45)) 通常coord_flip()後往往會希望這些bar會是由上而下排序好的，但用arrange(desc(people_total)是無法解決問題的，因為Y軸原本會是照Y軸的刻度排列，而不是Y軸的數值。所以，要被排序的應該是Y軸的「文字」也就是那些縣市。因此，我們需要將該縣市轉為factor（1~n），並且讓這些縣市被安排的factor數值照people_total排列，因此要用mutate(county = reorder(county, people_total))。reorder()是一個將文字轉factor的函式，但在此特別指定照people_total的編排。 county %&gt;% # arrange(desc(people_total) %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;skyblue&quot;) + coord_flip() + theme_minimal() + th 1.4 視覺化說故事的技巧 「說故事」才是整則資料新聞的核心，在運用圖表來輔助敘事時，應搭配說理說服的內容來突顯（highlight）圖面上的特徵，而不是留待讀者自己觀察。以下有三種highlight圖表部分資料的方法。第一個方法是在繪圖時用+ scale_color_manual()或+ scale_fill_manual()指定顏色給不同群組；方法二是利用gghighlight這個套件來指定要上色的群組，而且gghighlight可以和fill與color相互搭配，仍然可以用scale_fill_manual和scale_color_manual來指定顏色。但會有個狀況是，如果原本沒群組那怎麼辦？就自己用mutate()打造群組就好。方法各有利弊與使用時機。 1.4.1 依群組指定顏色 scale_color_manual() 與scale_fill_manual() NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + scale_color_manual( limits=c(&quot;65-74&quot;, &quot;35-44&quot;), # original chart group values=c(&quot;gold&quot;, &quot;skyblue&quot;), # map to color name=&quot;Age group&quot;, # legend title breaks=c(&quot;65-74&quot;, &quot;35-44&quot;), # original legend group labels labels=c(&quot;elder(65-74)&quot;,&quot;younger(35-44)&quot;), # map to new labels na.value = &quot;lightgrey&quot; # color for other groups ) + theme_minimal() 1.4.2 使用gghighlight套件 library(gghighlight) NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;whitesmoke&quot;, colour = &quot;whitesmoke&quot;, size = 0.5, linetype = &quot;solid&quot;)) 使用gghighlight仍能自己使用scale_color_manual()來指定顏色 NW %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + scale_color_manual( limits=c(&quot;65-74&quot;, &quot;35-44&quot;), # original chart group values=c(&quot;gold&quot;, &quot;skyblue&quot;)) + # map to color theme_minimal() 1.4.3 為視覺化建立群組 這個方法是在原本的資料並沒有可以作為color或fill的因子，所以自行創建一個要突顯的群組。 county %&gt;% mutate(group = if_else(county %in% c(&quot;新竹縣&quot;, &quot;新竹市&quot;), &quot;highlight&quot;, &quot;other&quot;)) %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total, fill=group) %&gt;% geom_col() + scale_fill_manual(values=c(&quot;highlight&quot;=&quot;Khaki&quot;, &quot;other&quot;=&quot;lightgrey&quot;)) + guides(fill=&quot;none&quot;) + coord_flip() + theme_minimal() + th 但事實上也可以用gghighlight直接達成 county %&gt;% mutate(county = reorder(county, people_total)) %&gt;% ggplot() + aes(county, people_total) %&gt;% geom_col(fill=&quot;deeppink&quot;) + gghighlight(county %in% c(&quot;新竹縣&quot;, &quot;新竹市&quot;)) + guides(fill=&quot;none&quot;) + coord_flip() + theme_minimal() + th 1.5 時間軸的視覺化 library(tidyverse) library(lubridate) # options(stringsAsFactors = F) # default option in R &gt; 4.0 1.5.1 文字轉時間 Convert “character time” to R date.time object (POSIXct) ptturl &lt;- &quot;https://github.com/P4CSS/R4CSSData/raw/main/ptt_hang_posts.csv&quot; raw &lt;- read.csv(url(ptturl)) clean &lt;- raw %&gt;% mutate(ptime = as.POSIXct(strptime(ptime, &quot;%Y-%m-%dT%H:%M:%SZ&quot;, tz = &quot;ASIA/Taipeiw&quot;))) raw &lt;- read_csv(url(ptturl)) ?read_csv t &lt;- &quot;2019-04-12T00:48:19Z&quot; class(t) ## [1] &quot;character&quot; ?strptime t1 &lt;- strptime(t, &quot;%Y-%m-%dT%H:%M:%SZ&quot;) raw %&gt;% glimpse() ## Rows: 8,317 ## Columns: 7 ## $ plink &lt;chr&gt; &quot;https://www.ptt.cc/bbs/HatePolitics/M.1555035677.A.24B.html&quot;… ## $ board &lt;chr&gt; &quot;HatePolitics&quot;, &quot;HatePolitics&quot;, &quot;HatePolitics&quot;, &quot;HatePolitics… ## $ pcontent &lt;chr&gt; &quot;\\n\\n韓國瑜赴哈佛大學前受訪表示，就是「keeping practice」，盡… ## $ poster &lt;chr&gt; &quot;lovebxcx&quot;, &quot;ikr3699654&quot;, &quot;sunyeah&quot;, &quot;rock720429&quot;, &quot;btm978952… ## $ ptitle &lt;chr&gt; &quot;Re: [新聞] 重申反對一國兩制 韓國瑜：看著我靈魂深&quot;, &quot;Re: [討… ## $ ptime &lt;dttm&gt; 2019-04-12 02:21:14, 2019-04-12 02:13:45, 2019-04-12 02:10:1… ## $ ipaddr &lt;chr&gt; &quot;83.221.204.163&quot;, &quot;114.43.176.110&quot;, &quot;118.163.130.181&quot;, &quot;118.1… 1.5.2 時間作為機率分佈X軸 raw %&gt;% ggplot() + aes(ptime) + geom_density() 1.5.3 逐月統計資料 ?lubridate raw %&gt;% mutate(m = month(ptime)) %&gt;% count(m) %&gt;% ggplot() + aes(m, n) + geom_col() 1.5.4 逐日統計資料（佳） raw %&gt;% filter(ptime &gt;= as_date(&quot;2019-03-18&quot;) &amp; ptime &lt; as_date(&quot;2019-04-01&quot;)) %&gt;% mutate(m = floor_date(ptime, unit = &quot;day&quot;)) %&gt;% count(m) %&gt;% ggplot() + aes(m, n) + geom_col() 1.5.5 每日逐時資料 clean %&gt;% filter(ptime &gt;= as_datetime(&quot;2019-03-25&quot;) &amp; ptime &lt; as_datetime(&quot;2019-04-01&quot;)) %&gt;% mutate(d = floor_date(ptime, unit = &quot;day&quot;)) %&gt;% mutate(h = hour(ptime)) %&gt;% count(d, h) %&gt;% mutate(wd = wday(d, label = F, locale = Sys.getlocale(&quot;LC_TIME&quot;))) %&gt;% mutate(isweekend = ifelse(wd &gt;= 6, &quot;weekend&quot;, &quot;weekday&quot;)) %&gt;% ggplot() + aes(h, n, color = as.character(d)) + geom_line() + facet_wrap(~isweekend) ?ifelse 參考資料：5.4 Control the size of plots/images | R Markdown Cookbook (bookdown.org)↩︎ "],["text-processing.html", "Chapter 2 Text Processing 2.1 Tweets 分析", " Chapter 2 Text Processing 2.1 Tweets 分析 應用dplyr和ggplot做社群輿論資料（tweets）的探索性分析，其中除了dplyr和ggplot外，尚用到文字處理（stringr, extract()）、時間處理（lubridate），甚至包含一點keyness分析，為找出兩個群體文本中，對彼此相對突出關鍵字的文本探勘方法。 本範例取材自David Robinson的blog文章「Text analysis of Trump’s tweets confirms he writes only the (angrier) Android half」。David Robinson是「Text Mining with R」的共同作者， 可參考該書籍上的範例「7 Case study: comparing Twitter archives | Text Mining with R (tidytextmining.com)」。 2.1.1 載入並清理資料 R4.0後stringsAsFactors=F變為預設值，便不用再另行用options()設為全域適用的參數。 library(tidyverse) library(lubridate) options(scipen = 999) th &lt;- theme_minimal() + theme(plot.title = element_text(size=24, face=&quot;bold&quot;), legend.title = element_text(size=18, face=&quot;bold&quot;), legend.text = element_text(size=18), axis.title = element_text(hjust=0.5, size=18, face=&quot;italic&quot;), axis.text = element_text(size=18) ) new_style &lt;- function() { font &lt;- &quot;Helvetica&quot; theme( plot.title = element_text(family=font, size=28, face=&quot;bold&quot;), plot.subtitle = element_text(family=font, size=22, margin=margin(9,0,9,0)), plot.caption = element_blank(), legend.position = &quot;top&quot;, legend.text.align = 0, legend.background = element_blank(), # legend.title = element_blank(), legend.key = element_blank(), legend.text = element_text(family=font, size=18, color=&quot;#222222&quot;), axis.text = element_text(family=font, size=18, color=&quot;#222222&quot;), axis.text.x = element_text(margin=margin(5, b = 10)), axis.ticks = element_blank(), axis.line = element_blank(), panel.grid.minor = element_blank(), panel.grid.major.y = element_line(color=&quot;#cbcbcb&quot;), panel.grid.major.x = element_blank(), panel.background = element_blank(), strip.background = element_rect(fill=&quot;white&quot;), strip.text = element_text(size = 22, hjust = 0) ) } load(url(&quot;http://varianceexplained.org/files/trump_tweets_df.rda&quot;)) dim(trump_tweets_df) ## [1] 1512 16 names(trump_tweets_df) ## [1] &quot;text&quot; &quot;favorited&quot; &quot;favoriteCount&quot; &quot;replyToSN&quot; ## [5] &quot;created&quot; &quot;truncated&quot; &quot;replyToSID&quot; &quot;id&quot; ## [9] &quot;replyToUID&quot; &quot;statusSource&quot; &quot;screenName&quot; &quot;retweetCount&quot; ## [13] &quot;isRetweet&quot; &quot;retweeted&quot; &quot;longitude&quot; &quot;latitude&quot; trump_tweets_df %&gt;% select(id, text, created, favoriteCount, retweetCount, statusSource) %&gt;% head(20) ## # A tibble: 20 × 6 ## id text created favoriteCount retweetCount statusSource ## &lt;chr&gt; &lt;chr&gt; &lt;dttm&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 7626698825… &quot;My … 2016-08-08 15:20:44 9214 3107 &quot;&lt;a href=\\&quot;… ## 2 7626415954… &quot;Joi… 2016-08-08 13:28:20 6981 2390 &quot;&lt;a href=\\&quot;… ## 3 7624396589… &quot;#IC… 2016-08-08 00:05:54 15724 6691 &quot;&lt;a href=\\&quot;… ## 4 7624253718… &quot;Mic… 2016-08-07 23:09:08 19837 6402 &quot;&lt;a href=\\&quot;… ## 5 7624008698… &quot;The… 2016-08-07 21:31:46 34051 11717 &quot;&lt;a href=\\&quot;… ## 6 7622845333… &quot;I s… 2016-08-07 13:49:29 29831 9892 &quot;&lt;a href=\\&quot;… ## 7 7621109187… &quot;Tha… 2016-08-07 02:19:37 19223 5784 &quot;&lt;a href=\\&quot;… ## 8 7621069044… &quot;.@L… 2016-08-07 02:03:39 19543 7930 &quot;&lt;a href=\\&quot;… ## 9 7621044117… &quot;I a… 2016-08-07 01:53:45 75488 24663 &quot;&lt;a href=\\&quot;… ## 10 7620164261… &quot;#Cr… 2016-08-06 20:04:08 23661 7903 &quot;&lt;a href=\\&quot;… ## 11 7619881643… &quot;Hea… 2016-08-06 18:11:50 28069 8561 &quot;&lt;a href=\\&quot;… ## 12 7619369299… &quot;Any… 2016-08-06 14:48:14 35205 13129 &quot;&lt;a href=\\&quot;… ## 13 7619310105… &quot;Cro… 2016-08-06 14:24:43 36936 13250 &quot;&lt;a href=\\&quot;… ## 14 7618928294… &quot;Hil… 2016-08-06 11:53:00 32716 9356 &quot;&lt;a href=\\&quot;… ## 15 7617735761… &quot;Goo… 2016-08-06 03:59:08 34109 10385 &quot;&lt;a href=\\&quot;… ## 16 7617579885… &quot;&#39;Tr… 2016-08-06 02:57:11 19436 8066 &quot;&lt;a href=\\&quot;… ## 17 7617548986… &quot;Tha… 2016-08-06 02:44:55 19330 5418 &quot;&lt;a href=\\&quot;… ## 18 7617118564… &quot;DON… 2016-08-05 23:53:53 30869 16786 &quot;&lt;a href=\\&quot;… ## 19 7616938031… &quot;Tha… 2016-08-05 22:42:08 19431 5681 &quot;&lt;a href=\\&quot;… ## 20 7616538754… &quot;#Ma… 2016-08-05 20:03:29 27568 13869 &quot;&lt;a href=\\&quot;… 2.1.2 萃取資料 Extracting publishing device of tweets # tidyr::extract() # stringr::str_replace trump_tweets_df$statusSource[1] ## [1] &quot;&lt;a href=\\&quot;http://twitter.com/download/android\\&quot; rel=\\&quot;nofollow\\&quot;&gt;Twitter for Android&lt;/a&gt;&quot; tweets &lt;- trump_tweets_df %&gt;% select(id, statusSource, text, created) %&gt;% # mutate(source = str_replace(statusSource, # &quot;.*Twitter for (.*?)&lt;.*&quot;, &quot;\\\\1&quot;)) %&gt;% # mutate(source = str_extract(statusSource, &#39;Twitter for (.*?)&lt;&#39;)) %&gt;% View extract(statusSource, &quot;source&quot;, &quot;Twitter for (.*?)&lt;&quot;) %&gt;% filter(source %in% c(&quot;iPhone&quot;, &quot;Android&quot;)) # Using stringr::str_replace() to mutate a new source variable, replacing tidyr:: # str(tweets) 2.1.3 視覺化探索 2.1.3.1 發文時間 Converting timezone lubridate::with_tz() Extracting hour of timestamp by lubridate::hour() Plotting number of tweets by hour Display y-axis as percentage by scales::percent_format() library(scales) # for percent_format() # lubridate::hour() # lubridate::with_tz() # scales::percent_format() toplot1 &lt;- tweets %&gt;% count(source, hour = hour(with_tz(created, &quot;EST&quot;))) %&gt;% # group_by(source) %&gt;% mutate(percent = n / sum(n)) # ungroup() %&gt;% toplot2 &lt;- tweets %&gt;% count(source, hour = hour(with_tz(created, &quot;EST&quot;))) %&gt;% group_by(source) %&gt;% mutate(percent = n / sum(n)) %&gt;% ungroup() p1 &lt;- toplot1 %&gt;% ggplot() + aes(hour, percent, color = source) + geom_line(size = 1) + scale_color_manual(name = &quot;Phone System&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Hour of day (EST)&quot;, y = &quot;% of tweets&quot;, color = &quot;&quot;) + theme_minimal() p2 &lt;- toplot2 %&gt;% ggplot() + aes(hour, percent, color = source) + geom_line(size = 1) + scale_color_manual(name = &quot;Phone System&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + scale_y_continuous(labels = percent_format()) + labs(x = &quot;Hour of day (EST)&quot;, y = &quot;% of tweets&quot;, color = &quot;&quot;) + theme_minimal() cowplot::plot_grid( p1, NULL, p2, labels = c(&quot;(a) Normalized by all&quot;, &quot;&quot;, &quot;(b) Normalized in group&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 2.1.3.2 發文附圖 Filtering out tweets starting with \" (those tweets mention #realdonaldtrump) Mutating new variable picture to indicate whether text has picture or not? Counting source by picture Plotting bar chart to compare difference between sources. # library(stringr) toplot &lt;- tweets %&gt;% filter(!str_detect(text, &#39;^&quot;&#39;)) %&gt;% mutate(picture = if_else(str_detect(text, &quot;t.co&quot;), &quot;Picture/link&quot;, &quot;No picture/link&quot;)) %&gt;% count(source, picture) p1 &lt;- toplot %&gt;% ggplot() + aes(source, n, fill = picture) + geom_col(position=&quot;stack&quot;, width = 0.5) + scale_fill_manual(name = &quot;With Picture/link?&quot;, labels = c(&quot;Yes&quot;, &quot;No&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + labs(x = &quot;&quot;, y = &quot;Number of tweets&quot;, fill = &quot;&quot;) + theme_minimal() p2 &lt;- toplot %&gt;% ggplot() + aes(source, n, fill = picture) + geom_col(position=&quot;dodge&quot;) + scale_fill_manual(name = &quot;With Picture/link?&quot;, labels = c(&quot;Yes&quot;, &quot;No&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + labs(x = &quot;&quot;, y = &quot;Number of tweets&quot;, fill = &quot;&quot;) + theme_minimal() cowplot::plot_grid( p1, NULL, p2, labels = c(&quot;(a) Stacked&quot;, &quot;&quot;, &quot;(b) Dodged&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 2.1.4 Keyness library(tidytext) # unnest_tokens() library(stringr) # str_detect(), str_replace_all() # View(test) # stop_words$word tweet_words &lt;- tweets %&gt;% filter(!str_detect(text, &#39;^&quot;&#39;)) %&gt;% mutate(text = str_replace_all(text, &quot;https://t.co/[A-Za-z\\\\d]+|&amp;amp;&quot;, &quot;&quot;)) %&gt;% # unnest_tokens(word, text) %&gt;% # unnest_tokens(word, text, token = &quot;regex&quot;, pattern = &quot;[^A-Za-z\\\\d#@&#39;]&quot;) %&gt;% mutate(word = str_split(text, &quot; &quot;)) %&gt;% select(id, text, word, everything()) %&gt;% unnest(word) %&gt;% filter(!word %in% stop_words$word, str_detect(word, &quot;[a-z]&quot;)) # View(tweet_words) tweet_words %&gt;% count(word, sort = TRUE) %&gt;% head(20) %&gt;% mutate(word = reorder(word, n)) %&gt;% ggplot(aes(word, n)) + geom_col(fill = &quot;royalblue&quot;) + ylab(&quot;Occurrences&quot;) + coord_flip() + theme_minimal() + theme(axis.text = element_text(size=10)) 2.1.4.1 詞頻差異 test &lt;- tweet_words %&gt;% count(word, source) %&gt;% filter(n &gt;= 5) %&gt;% pivot_wider(names_from = source, values_from = n, values_fill = 0) # View(test) word_by_source &lt;- tweet_words %&gt;% count(word, source) %&gt;% filter(n &gt;= 5) %&gt;% pivot_wider(names_from = source, values_from = n, values_fill = 0) %&gt;% # spread(source, n, fill = 0) %&gt;% ungroup() sum(word_by_source$iPhone) ## [1] 1383 sum(word_by_source$Android) ## [1] 2132 android_iphone_ratios &lt;- word_by_source %&gt;% mutate(iPhone = (iPhone+1)/sum(iPhone+1)) %&gt;% mutate(Android = (Android+1)/sum(Android+1)) %&gt;% # mutate_at(.cols = vars(iPhone, Android), # .funs = funs((. + 1) / sum(. + 1))) %&gt;% mutate(logratio = log2(Android / iPhone)) %&gt;% arrange(desc(logratio)) 2.1.4.2 視覺化log-ratio android_iphone_ratios %&gt;% group_by(logratio &gt; 0) %&gt;% top_n(15, abs(logratio)) %&gt;% ungroup() %&gt;% mutate(word = reorder(word, logratio)) %&gt;% ggplot(aes(word, logratio, fill = logratio &lt; 0)) + geom_col() + coord_flip() + ylab(&quot;Android / iPhone log ratio&quot;) + scale_fill_manual(name = &quot;&quot;, labels = c(&quot;Android&quot;, &quot;iPhone&quot;), values = c(&quot;royalblue&quot;, &quot;gold&quot;)) + theme_minimal() + theme(axis.text = element_text(size=14)) "],["tw-data-visualization.html", "Chapter 3 TW Data Visualization 3.1 Coordination &amp; Axis 3.2 Log-scale 3.3 Square-root scale 3.4 TW-Salary (boxplot) 3.5 TW-Income (boxplot)", " Chapter 3 TW Data Visualization library(tidyverse) options(stringsAsFactors = F) options(scipen = 999) th &lt;- theme_minimal() + theme(title = element_text(family=&quot;Heiti TC Light&quot;), text = element_text(family=&quot;Heiti TC Light&quot;), axis.text.y = element_text(family=&quot;Heiti TC Light&quot;), axis.text.x = element_text(family=&quot;Heiti TC Light&quot;), legend.text = element_text(family=&quot;Heiti TC Light&quot;), plot.title = element_text(family=&quot;Heiti TC Light&quot;) ) 3.1 Coordination &amp; Axis Chap3 Coordination &amp; Axis Fundamentals of Data Visualization (clauswilke.com) Figure 3.5: Population numbers of Texas counties relative to their median value. Select counties are highlighted by name. The dashed line indicates a ratio of 1, corresponding to a county with median population number. The most populous counties have approximately 100 times more inhabitants than the median county, and the least populous counties have approximately 100 times fewer inhabitants than the median county. Data source: 2010 Decennial U.S. Census. See What’s Going On in This Graph? | Vaccination by Country fromWhat Data Shows About Vaccine Supply and Demand in the Most Vulnerable Places - The New York Times (nytimes.com) The original chart is animated along the timeline.What Data Shows About Vaccine Supply and Demand in the Most Vulnerable Places - The New York Times (nytimes.com) 3.2 Log-scale raw &lt;- read_csv(&quot;data/opendata107Y020.csv&quot;, show_col_types = FALSE) %&gt;% slice(-1) %&gt;% type_convert() toplot &lt;- raw %&gt;% select(site_id, village, edu_age_15up_total) %&gt;% arrange(desc(edu_age_15up_total)) %&gt;% mutate(index = row_number()) %&gt;% mutate(label = ifelse(index &lt;= 5 | index &gt; n()-5, paste0(site_id, village), &quot;&quot;)) library(ggrepel) p2 &lt;- toplot %&gt;% ggplot() + aes(index, edu_age_15up_total) + geom_point(alpha=0.5, color=&quot;royalblue&quot;) + geom_text_repel(aes(label = label), point.padding = .4, color = &quot;black&quot;, min.segment.length = 0, family = &quot;Heiti TC Light&quot;) + theme(axis.text.x=element_blank()) + scale_y_log10(breaks = c(0, 1, 10, 100, 1000, 10000)) + theme_minimal() p1 &lt;- toplot %&gt;% ggplot() + aes(index, edu_age_15up_total) + geom_point(alpha=0.5, color=&quot;royalblue&quot;) + theme(axis.text.x=element_blank()) + theme_minimal() cowplot::plot_grid( p2, NULL, p1, labels = c(&quot;a&quot;, &quot;&quot;, &quot;b&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) 3.3 Square-root scale Chap3 Coordination &amp; Axis Fundamentals of Data Visualization (clauswilke.com) Figure 3.8: Areas of Northeastern U.S. states. (a) Areas shown on a linear scale. (b) Areas shown on a square-root scale. Data source: Google. 前面是視覺化了各村里大於十五歲以上人口的人口數分佈，採用對數尺度（log-scale）可以觀察到比較小的村里。那有什麼是適合用平方根尺度（sqrt-scale）的呢？是土地嗎？密度嗎？還是人口數？是村里等級嗎？鄉鎮市區等級嗎？還是縣市等級？ town &lt;- read_csv(&quot;data/tw_population_opendata110N010.csv&quot;) %&gt;% slice(-1, -(370:375)) %&gt;% type_convert() town %&gt;% arrange(desc(area)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, area) %&gt;% geom_col(fill=&quot;skyblue&quot;) + scale_y_sqrt() + theme_minimal() Figure 3.1: (ref:population-area) county &lt;- town %&gt;% mutate(county = str_sub(site_id, 1, 3)) %&gt;% group_by(county) %&gt;% summarize( area = sum(area), people_total = sum(people_total) ) %&gt;% ungroup() p1 &lt;- county %&gt;% arrange(desc(people_total)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, people_total) %&gt;% geom_col(fill=&quot;lightgrey&quot;) + # scale_y_sqrt() + theme_minimal() p2 &lt;- county %&gt;% arrange(desc(people_total)) %&gt;% mutate(index = row_number()) %&gt;% ggplot() + aes(index, people_total) %&gt;% geom_col(fill=&quot;khaki&quot;) + scale_y_sqrt(breaks=c(0, 250000, 500000, 1000000, 2000000, 4000000)) + theme_minimal() cowplot::plot_grid( p1, NULL, p2, labels = c(&quot;a&quot;, &quot;&quot;, &quot;b&quot;), nrow = 1, rel_widths = c(1, 0.1, 1) ) Figure 3.2: (ref:population-area) 3.4 TW-Salary (boxplot) Inspired by Six Myths About Choosing a College Major - The New York Times (nytimes.com) and What’s Going On in This Graph? | Jan. 9, 2018 - The New York Times (nytimes.com) library(readxl) raw &lt;- read_excel(&quot;data/tw_salary109.xlsx&quot;, sheet=1, trim_ws = T) raw ## # A tibble: 29 × 5 ## Category Q1 Median Q3 Mean ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 男 39 53.2 82.3 70.7 ## 2 女 35.1 46.8 67.6 58.6 ## 3 未滿25歲 28.1 35.8 45.1 37.7 ## 4 25-29歲 36.6 47.8 61.7 53 ## 5 30-39歲 39.2 53.3 77 64.1 ## 6 40-49歲 39.9 56.9 91.8 74.8 ## 7 50-64歲 37.8 53.3 88.4 75.5 ## 8 65歲以上 30.6 40.9 63.1 62.6 ## 9 國中及以下 32.7 40.5 52 45.4 ## 10 高中（職） 34.5 44.7 59.8 51.9 ## # … with 19 more rows raw %&gt;% slice(-(1:12)) %&gt;% mutate(Category = reorder(Category, desc(Median))) %&gt;% ggplot() + aes(y = Category, xlower=Q1, xmiddle=Median, xupper=Q3, xmin=0, xmax=150) + geom_boxplot(stat = &quot;identity&quot;, color=&quot;white&quot;, fill=&quot;skyblue&quot;) + geom_point(aes(x = Mean)) + th + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) 3.5 TW-Income (boxplot) library(gghighlight) toplot &lt;- read_csv(&quot;data/tw_income_107.csv&quot;, ) %&gt;% filter(!`村里` %in% c(&quot;合計&quot;, &quot;其他&quot;, &quot;福住里&quot;)) %&gt;% filter(鄉鎮市區 %in% c(&quot;信義區&quot;)) %&gt;% mutate(村里 = reorder(村里, desc(中位數))) toplot %&gt;% mutate(group = if_else((平均數&gt;第三分位數), &quot;highlight&quot;, &quot;none&quot;)) %&gt;% ggplot() + aes(y = 村里, xlower=第一分位數, xmiddle=中位數, xupper=第三分位數, xmin= min(第一分位數), xmax=max(第三分位數), fill=group) + geom_boxplot(stat = &quot;identity&quot;, color=&quot;white&quot;) + scale_fill_manual(values = c(&quot;highlight&quot;=&quot;orangered&quot;, &quot;none&quot;=&quot;skyblue&quot;)) + guides(fill=FALSE) + geom_point(aes(x = 平均數)) + xlab(&quot;年所得（單位：千元）&quot;) + th + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) "],["wgoigt-of-nytimes.html", "Chapter 4 WGOIGT of NyTimes 4.1 Net Worth by Age Group 4.2 UNICEF-Optimistic 4.3 Global Carbon Projects", " Chapter 4 WGOIGT of NyTimes library(tidyverse) library(gghighlight) 4.1 Net Worth by Age Group LEARNING NOTES Median for Inequality 這個教學案例來自紐約時報的「What’s going on in this gragh」系列資料視覺化教學之Teach About Inequality With These 28 New York Times Graphs - The New York Times (nytimes.com) 。該圖表呈現在不同年代、不同年齡層的人所擁有的淨資產（包含土地、存款、投資等減去債務）。該圖表的結果指出，在不同年代的老年人是越來越有錢，但年輕人卻越來越窮（該曲線為減去1989年 4.1.1 Read and sort data Sorted by arrange() function. p1 &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(year, Category, Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% ungroup() p1 %&gt;% filter(year &lt;= 1992) %&gt;% knitr::kable() year Category Net_Worth 1989 Less than 35 16.17019 1989 35-44 112.47530 1989 45-54 195.11630 1989 55-64 195.25554 1989 65-74 154.34277 1989 75 or older 144.29855 1992 Less than 35 16.60780 1992 35-44 79.91050 1992 45-54 139.97745 1992 55-64 203.44104 1992 65-74 176.44667 1992 75 or older 155.35173 p1 %&gt;% ggplot() + aes(year, Net_Worth, color = Category) + geom_line(linetype=&quot;dotted&quot;) + geom_point() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;white&quot;, size = 0.5, linetype = &quot;solid&quot;)) p2 &lt;- read_csv(&quot;nytdata/interactive_bulletin_charts_agecl_median.csv&quot;) %&gt;% select(year, Category, NW = Net_Worth) %&gt;% group_by(Category) %&gt;% arrange(year) %&gt;% mutate(increase = (NW-first(NW))/first(NW)) %&gt;% ungroup() p2 %&gt;% filter(year &lt;= 1992) %&gt;% knitr::kable() year Category NW increase 1989 Less than 35 16.17019 0.0000000 1989 35-44 112.47530 0.0000000 1989 45-54 195.11630 0.0000000 1989 55-64 195.25554 0.0000000 1989 65-74 154.34277 0.0000000 1989 75 or older 144.29855 0.0000000 1992 Less than 35 16.60780 0.0270627 1992 35-44 79.91050 -0.2895285 1992 45-54 139.97745 -0.2825948 1992 55-64 203.44104 0.0419220 1992 65-74 176.44667 0.1432131 1992 75 or older 155.35173 0.0765994 p2 %&gt;% ggplot() + aes(year, increase, color = Category) + geom_line(linetype=&quot;dotted&quot;) + geom_point() + gghighlight(Category %in% c(&quot;65-74&quot;, &quot;35-44&quot;)) + theme_minimal() + scale_y_continuous(labels=scales::parse_format()) + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;white&quot;, size = 0.5, linetype = &quot;solid&quot;)) 4.2 UNICEF-Optimistic https://www.nytimes.com/2021/11/17/upshot/global-survey-optimism.html https://changingchildhood.unicef.org/about plot.opt &lt;- read_csv(&quot;nytdata/unicef-changing-childhood-data.csv&quot;) %&gt;% select(country = WP5, age = WP22140, bw = WP22092) %&gt;% mutate(country = ordered(country, levels=c(1, 3, 4, 10, 11, 12, 13, 14, 17, 29, 31, 33, 35, 36, 60, 61, 77, 79, 81, 87, 165), labels=c(&quot;USA&quot;, &quot;Morocco&quot;, &quot;Lebanon&quot;, &quot;Indonesia&quot;, &quot;Bangladesh&quot;, &quot;UK&quot;, &quot;France&quot;, &quot;Germany&quot;, &quot;Spain&quot;, &quot;Japan&quot;, &quot;India&quot;, &quot;Brazil&quot;, &quot;Nigeria&quot;, &quot;Kenya&quot;, &quot;Ethiopia&quot;, &quot;Mali&quot;, &quot;Ukraine&quot;, &quot;Cameroon&quot;, &quot;Zimbabwe&quot;, &quot;Argentina&quot;, &quot;Peru&quot;))) %&gt;% count(country, age, bw) %&gt;% group_by(country, age) %&gt;% mutate(perc = n/sum(n)) %&gt;% ungroup() %&gt;% filter(bw == 1) %&gt;% select(country, age, perc) %&gt;% spread(age, perc) %&gt;% rename(`15-24y` = `1`, `40+y` = `2`) plot.opt %&gt;% head(10) %&gt;% knitr::kable() country 15-24y 40+y USA 0.6679842 0.4611465 Morocco 0.4365079 0.4735812 Lebanon 0.5467197 0.4435798 Indonesia 0.7920605 0.8027344 Bangladesh 0.4624506 0.4319527 UK 0.5040000 0.4140000 France 0.3900000 0.2640000 Germany 0.5900000 0.3860000 Spain 0.5160000 0.3340000 Japan 0.6367265 0.2586873 plot.opt %&gt;% ggplot() + aes(`40+y`, `15-24y`, label = country) + geom_point(color = &quot;skyblue&quot;, size = 2) + xlim(0, 1) + ylim(0,1) + geom_text(hjust = -0.1, vjust = -0.5) + geom_abline(intercept = 0, slop = 1, color=&quot;lightgrey&quot;, alpha=0.5, linetype=&quot;dashed&quot;) + theme_minimal() + theme(aspect.ratio=1) 4.3 Global Carbon Projects Who Has The Most Historical Responsibility for Climate Change? - The New York Times (nytimes.com) totreemap &lt;- read_csv(&quot;nytdata/GCB2021v34_MtCO2_flat.csv&quot;) %&gt;% drop_na(`Total`) %&gt;% filter(!Country %in% c(&quot;Global&quot;, &quot;International Transport&quot;)) %&gt;% filter(Year==2020) %&gt;% arrange(desc(`Total`)) %&gt;% mutate(perc = Total/sum(Total)) %&gt;% slice(1:20) library(treemapify) totreemap %&gt;% ggplot() + aes(area = perc, fill=`Per Capita`, label=Country) + geom_treemap() + geom_treemap_text(color=&quot;white&quot;, place=&quot;centre&quot;, grow=TRUE ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
